{"version":3,"sources":["assets/invernadero.svg","Utils/Api.js","pages/LoginPage.jsx","components/NavBarDark.jsx","components/Filters.jsx","components/Graphs.jsx","components/ShowDiseases.jsx","pages/HomePage.jsx","components/FunctionActions.jsx","pages/ConfigActions.jsx","components/DiseaseForm.jsx","pages/Diseases.jsx","components/UserCard.jsx","components/QRgenerator.jsx","components/CreateUserForm.jsx","pages/Users.jsx","components/App.js","index.js"],"names":["module","exports","SERVER_URL","loginUser","email","password","a","urlencoded","URLSearchParams","append","console","log","requestOptions","method","body","redirect","fetch","res","ok","Error","json","localStorage","setItem","jwt","role","getAllUsers","myHeaders","Headers","getItem","headers","response","users","createUser","user","TwoFactorUrl","updateUser","id","deleteUser","getGrowBedEnvironment","growbed_id","environment","getGreenHouses","green_houses","getGrowBeds","grow_beds","getDiseases","pests","saveInspection","inspection","raw","JSON","stringify","getInspection","configLights","config","securityCode","configBlinds","configDoor","LoginPage","props","onChangeEmail","event","setState","target","value","onChangePassword","e","preventDefault","login","state","error","errorMessage","Alert","className","variant","to","pathname","name","this","icon","faLeaf","Container","Row","Col","faUserTie","classame","color","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Button","React","Component","NavBarDark","logout","clear","isAdmin","Navbar","bg","Brand","faSeedling","Nav","Link","as","onClick","Filters","componentDidMount","getGrowBedsAndGreenHouses","Promise","all","values","allGrowBeds","greenHouseId","greenhouse","growBeds","filter","growBed","greenHouses","handleFiltersChange","growBedId","growbed","filterGrowBeds","handleGrowBedChange","style","padding","src","invernadero","width","required","map","green_house","idx","key","grow_bed","Graphs","getEnvironmentData","interval","setInterval","componentDidUpdate","prevProps","prevState","clearInterval","temperature","humidity","Typography","align","gutterBottom","animDelay","nrOfLevels","textColor","percent","formatTextValue","ShowDiseases","refreshDiseases","lastGrowBed","diseases","observation","length","Fragment","ListGroup","Item","disease","HomePage","handleIntervalChange","filters","defaultValue","max","min","ActionsComp","finalTime","time","toString","split","finalHour","startTime","startHour","Door_config","zone","setLoading","showNotification","blinds_config","Configure","lights_config","time_init","time_end","onChangeSecurityCode","Box","my","alignItems","justifyContent","Grid","container","justify","utils","DateFnsUtils","inputVariant","margin","label","KeyboardButtonProps","size","ButtonGroup","ConfigActions","loading","title","message","NotificationManager","success","Spinner","animation","DiseaseForm","componentWillMount","onChangeDisease","checked","checkedDiseases","push","pop","onChangeObservation","Observations","editing","Check","rows","Diseases","UserCard","refreshUsers","setUser","find","user_selected","last_name","selected","disabled","faUsersCog","QRgen","context","Modal","show","onHide","handleClose","Header","closeButton","Title","centered","Body","includeMargin","CreateUserForm","twoFactorUrl","password_v","handleShow","Users","api","selected_user","AuthenticatedRoute","component","rest","render","from","location","App","exact","path","document","getElementById","ReactDOM"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,yC,gWCIrCC,EAAa,4BA0BNC,EAAS,uCAAG,WAAOC,EAAOC,GAAd,qBAAAC,EAAA,6DACnBC,EAAa,IAAIC,iBACVC,OAAO,QAASL,GAC3BG,EAAWE,OAAO,WAAYJ,GAE9BK,QAAQC,IAAI,SACRC,EAAiB,CACnBC,OAAQ,OACRC,KAAMP,EACNQ,SAAU,UATW,SAYPC,MAAMd,EAhCN,aAgC8BU,GAZvB,WAYnBK,EAZmB,QAadC,GAbc,uBAcf,IAAIC,MAdW,yBAiBNF,EAAIG,OAjBE,eAiBnBA,EAjBmB,OAkBvBC,aAAaC,QAAQ,QAASF,EAAKG,KACnCF,aAAaC,QAAQ,OAAQF,EAAKI,MAnBX,+DAAH,wDAwBTC,EAAW,uCAAG,kCAAAnB,EAAA,6DACrBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3ChB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UAPa,SAUJC,MAAMd,EArDX,aAqDmCU,GAV1B,WAUrBkB,EAVqB,QAYXZ,GAZW,sBAajB,IAAIC,MAba,wBAgBRW,EAASV,OAhBD,eAgBrBA,EAhBqB,yBAiBlBA,EAAKW,OAjBa,4CAAH,qDAoBXC,EAAU,uCAAG,WAAOC,GAAP,uBAAA3B,EAAA,6DACpBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3CrB,EAAa,IAAIC,gBAAgByB,GAEjCrB,EAAiB,CACnBC,OAAQ,OACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAVY,SAaHC,MAAMd,EA5EX,aA4EmCU,GAb3B,WAapBkB,EAboB,QAeVZ,GAfU,sBAgBhB,IAAIC,MAhBY,wBAmBPW,EAASV,OAnBF,eAmBpBA,EAnBoB,yBAoBjBA,EAAKc,cApBY,4CAAH,sDAuBVC,EAAU,uCAAG,WAAOF,GAAP,qBAAA3B,EAAA,6DACpBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3CrB,EAAa,IAAIC,gBAAgByB,GAEjCrB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAVY,SAaHC,MACnBd,EApGc,aAoGd,WAA6B+B,EAAKG,IAClCxB,GAfsB,WAapBkB,EAboB,QAkBVZ,GAlBU,sBAmBhB,IAAIC,MAnBY,gCAsBjBW,EAASV,MAtBQ,4CAAH,sDAyBViB,EAAU,uCAAG,WAAOJ,GAAP,qBAAA3B,EAAA,6DACpBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3CrB,EAAa,IAAIC,gBAEjBI,EAAiB,CACnBC,OAAQ,SACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAVY,SAaHC,MACnBd,EA7Hc,aA6Hd,WAA6B+B,EAAKG,IAClCxB,GAfsB,WAapBkB,EAboB,QAkBVZ,GAlBU,sBAmBhB,IAAIC,MAnBY,gCAsBjBW,EAASV,MAtBQ,4CAAH,sDA6BVkB,EAAqB,uCAAG,WAAOC,GAAP,qBAAAjC,EAAA,6DAC/BoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3ChB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UAPuB,SASdC,MACnBd,EArJiB,iBAqJjB,WAAgCqC,GAChC3B,GAXiC,WAS/BkB,EAT+B,QAcrBZ,GAdqB,sBAe3B,IAAIC,MAfuB,wBAkBlBW,EAASV,OAlBS,eAkB/BA,EAlB+B,yBAmB5BA,EAAKoB,aAnBuB,4CAAH,sDAsBrBC,EAAc,uCAAG,kCAAAnC,EAAA,6DACxBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3ChB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UAPgB,SAUPC,MAAMd,EA1KJ,mBA0KmCU,GAV9B,WAUxBkB,EAVwB,QAYdZ,GAZc,sBAapB,IAAIC,MAbgB,wBAgBXW,EAASV,OAhBE,eAgBxBA,EAhBwB,yBAiBrBA,EAAKsB,cAjBgB,4CAAH,qDAoBdC,EAAW,uCAAG,kCAAArC,EAAA,6DACrBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3ChB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UAPa,SAUJC,MAAMd,EA/LR,iBA+LmCU,GAV7B,WAUrBkB,EAVqB,QAYXZ,GAZW,sBAajB,IAAIC,MAba,wBAgBRW,EAASV,OAhBD,eAgBrBA,EAhBqB,yBAiBlBA,EAAKwB,WAjBa,4CAAH,qDAwBXC,EAAW,uCAAG,kCAAAvC,EAAA,6DACrBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAE3ChB,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UAPa,SAUJC,MAAMd,EArNZ,aAqNmCU,GAVzB,WAUrBkB,EAVqB,QAYXZ,GAZW,sBAajB,IAAIC,MAba,wBAgBRW,EAASV,OAhBD,eAgBrBA,EAhBqB,yBAiBlBA,EAAK0B,OAjBa,4CAAH,qDAoBXC,EAAc,uCAAG,WAAOC,GAAP,qBAAA1C,EAAA,6DACxBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAC/CF,EAAUjB,OAAO,eAAgB,oBAE7BwC,EAAMC,KAAKC,UAAUH,GAErBpC,EAAiB,CACnBC,OAAQ,OACRgB,QAASH,EACTZ,KAAMmC,EACNlC,SAAU,UAXgB,SAcPC,MAAMd,EA5OL,kBA4OmCU,GAd7B,WAcxBkB,EAdwB,QAgBdZ,GAhBc,uBAiBpB,IAAIC,MAjBgB,iCAoBrBW,GApBqB,4CAAH,sDAuBdsB,EAAa,uCAAG,WAAOb,GAAP,mBAAAjC,EAAA,6DACvBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAC/CF,EAAUjB,OAAO,eAAgB,qCAE7BG,EAAiB,CACnBC,OAAQ,MACRgB,QAASH,EACTX,SAAU,UARe,SAWNC,MACnBd,EAjQoB,kBAiQpB,uBAA+CqC,GAC/C3B,GAbyB,cAWvBkB,EAXuB,yBAepBA,EAASV,QAfW,2CAAH,sDAsBbiC,EAAY,uCAAG,WAAOC,EAAQC,GAAf,qBAAAjD,EAAA,6DAC1BI,QAAQC,IAAI4C,IACR7B,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAC/CF,EAAUjB,OAAO,YAAa8C,GAC9B7B,EAAUjB,OAAO,eAAgB,qCAE7BF,EAAa,IAAIC,gBAAgB8C,GAEjC1C,EAAiB,CACnBC,OAAQ,OACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAbc,SAgBLC,MAAMd,EA1RV,sBA0RmCU,GAhB1B,WAgBtBkB,EAhBsB,QAiBZZ,GAjBY,uBAkBlB,IAAIC,MAlBc,iCAqBnBW,GArBmB,4CAAH,wDAwBZ0B,EAAY,uCAAG,WAAOF,EAAQC,GAAf,qBAAAjD,EAAA,6DACtBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAC/CF,EAAUjB,OAAO,YAAa8C,GAC9B7B,EAAUjB,OAAO,eAAgB,qCAE7BF,EAAa,IAAIC,gBAAgB8C,GAEjC1C,EAAiB,CACnBC,OAAQ,OACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAZc,SAeLC,MAAMd,EAhTF,sBAgTmCU,GAflC,WAetBkB,EAfsB,QAiBZZ,GAjBY,uBAkBlB,IAAIC,MAlBc,iCAqBnBW,EAASV,QArBU,4CAAH,wDAwBZqC,EAAU,uCAAG,WAAOH,EAAQC,GAAf,qBAAAjD,EAAA,6DACpBoB,EAAY,IAAIC,SACVlB,OAAO,QAASY,aAAaO,QAAQ,UAC/CF,EAAUjB,OAAO,YAAa8C,GAC9B7B,EAAUjB,OAAO,eAAgB,qCAE7BF,EAAa,IAAIC,gBAAgB8C,GAEjC1C,EAAiB,CACnBC,OAAQ,OACRgB,QAASH,EACTZ,KAAMP,EACNQ,SAAU,UAZY,SAeHC,MAAMd,EAvUJ,oBAuUmCU,GAflC,WAepBkB,EAfoB,QAiBVZ,GAjBU,uBAkBhB,IAAIC,MAlBY,iCAqBjBW,EAASV,QArBQ,4CAAH,wDC/NRsC,G,yDAjGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAE1D,MAAOyD,EAAME,OAAOC,SAXnB,EAcnBC,iBAAmB,SAACJ,GAClB,EAAKC,SAAS,CAAEzD,SAAUwD,EAAME,OAAOC,SAftB,EAkBnB7D,UAlBmB,uCAkBP,WAAO+D,GAAP,SAAA5D,EAAA,6DACV4D,EAAEC,iBADQ,kBAIFC,EAAM,EAAKC,MAAMjE,MAAO,EAAKiE,MAAMhE,UAJjC,OAKR,EAAKyD,SAAS,CAAEQ,OAAO,EAAOF,OAAO,IAL7B,gDAOR,EAAKN,SAAS,CAAEQ,OAAO,IAPf,yDAlBO,sDAEjB,EAAKD,MAAQ,CACXjE,MAAO,GACPC,SAAU,GACViE,OAAO,EACPF,OAAO,GANQ,E,qDA8BjB,IAAMG,EACJ,kBAACC,EAAA,EAAD,CAAOC,UAAU,QAAQC,QAAQ,UAAjC,wCAKI3D,EACJ,kBAAC,IAAD,CACE4D,GAAI,CACFC,SAAU,QACVP,MAAO,CAAEQ,KAAMC,KAAKT,MAAMQ,SAKhC,OAAIC,KAAKT,MAAMD,MACNrD,EAIP,yBAAK0D,UAAU,UACb,yBAAKA,UAAU,UACf,kBAAC,IAAD,CAAiBA,UAAU,WAAWM,KAAMC,MAC1C,8EAGF,kBAACC,EAAA,EAAD,CAAWR,UAAU,UACnB,kBAACS,EAAA,EAAD,CAAKT,UAAU,iCACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,YACb,yBAAKA,UAAU,sCACb,kBAAC,IAAD,CAAiBM,KAAMK,IAAWC,SAAS,MAAMC,MAAM,UAGzD,kBAACC,EAAA,EAAD,CAAMC,SAAUV,KAAK3E,WACnB,kBAACoF,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,+BACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAUf,KAAKlB,cACfI,MAAOc,KAAKT,MAAMjE,MAClB0F,KAAK,QACLC,YAAY,sCAIhB,kBAACR,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAUf,KAAKb,iBACfD,MAAOc,KAAKT,MAAMhE,SAClByF,KAAK,WACLC,YAAY,gBAIhB,kBAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,0BAA2BD,UAAU,aAAnE,sBAIDK,KAAKT,MAAMC,MAAQC,EAAe,a,GAzFzB0B,IAAMC,Y,kBCFTC,G,mNACnBC,OAAS,WACP/E,aAAagF,S,EAGfC,QAAU,WAER,MAAe,SADJjF,aAAaO,QAAQ,S,uDAKhC,OACE,kBAAC2E,EAAA,EAAD,CAAQC,GAAG,OAAO9B,QAAQ,QACxB,kBAAC6B,EAAA,EAAOE,MAAR,KACE,kBAAC,IAAD,CAAiBhC,UAAU,WAAWM,KAAM2B,MAD9C,OAKA,kBAACC,EAAA,EAAD,CAAKlC,UAAU,WACb,kBAACkC,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMjC,GAAG,SAAvB,UAGCG,KAAKwB,WACJ,kBAACK,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMjC,GAAG,UAAvB,kBAIDG,KAAKwB,WACJ,kBAACK,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMjC,GAAG,aAAvB,eAIDG,KAAKwB,WACJ,kBAACK,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMjC,GAAG,kBAAvB,YAKF,kBAACgC,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMjC,GAAG,KACrB,0BAAMmC,QAAShC,KAAKsB,QAApB,6B,GAvC4BF,c,kBCDnBa,E,kDACnB,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IASRqD,kBAAoB,WAClB,EAAKC,6BAXY,EAcnBA,0BAdmB,sBAcS,gCAAA3G,EAAA,+EAIT4G,QAAQC,IAAI,CAACxE,IAAeF,MAJnB,OAIxB2E,EAJwB,uFAS1B,EAAKC,YAAcD,EAAO,GAEtBE,EAAeF,EAAO,GAAG,GAAGG,WAC5BC,EAAW,EAAKH,YAAYI,QAC9B,SAACC,GAAD,OAAaA,EAAQH,YAAcD,KAGrC,EAAKxD,SAAS,CAAE6D,YAAaP,EAAO,GAAII,WAAUF,iBAElD,EAAK3D,MAAMiE,oBAAoB,CAC7BC,UAAWL,EAAS,GAAGM,QACvBR,aAAcA,IApBU,yDAdT,EAsCnBS,eAAiB,SAAC7D,GAChB,IAAIoD,EAAepD,EAAEH,OAAOC,MAExBwD,EAAW,EAAKH,YAAYI,QAC9B,SAACC,GAAD,OAAaA,EAAQH,YAAcD,KAGrC,EAAKxD,SAAS,CAAE0D,WAAUF,iBAE1B,EAAK3D,MAAMiE,oBAAoB,CAC7BC,UAAWL,EAAS,GAAGM,QACvBR,aAAcA,KAjDC,EAqDnBU,oBAAsB,SAAC9D,GACrB,IAAI2D,EAAY3D,EAAEH,OAAOC,MACzB,EAAKL,MAAMiE,oBAAoB,CAC7BC,YACAP,aAAc,EAAKjD,MAAMiD,gBAtD3B,EAAKjD,MAAQ,CACXmD,SAAU,KACVG,YAAa,KACbL,aAAc,MANC,E,qDA8DjB,OACE,6BACE,yBAAK7C,UAAU,mBAAmBwD,MAAO,CAAEC,QAAS,KAClD,+CACA,yBAAKC,IAAKC,IAAaC,MAAM,WAG/B,kBAAC9C,EAAA,EAAD,CAAMC,SAAUV,KAAK9C,YACnB,kBAACuD,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,sBAEA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAUf,KAAKiD,eACflB,GAAG,SACHyB,UAAU,GACTxD,KAAKT,MAAMsD,aACV7C,KAAKT,MAAMsD,YAAYY,KAAI,SAACC,EAAaC,GAAd,OACzB,4BAAQC,IAAKD,EAAKzE,MAAOwE,EAAYjB,YAArC,eACeiB,EAAYjB,iBAMnC,kBAAChC,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,eACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAUf,KAAKkD,oBACfnB,GAAG,SACHyB,UAAU,GACTxD,KAAKT,MAAMmD,UACV1C,KAAKT,MAAMmD,SAASe,KAAI,SAACI,EAAUF,GAAX,OACtB,4BAAQC,IAAKD,EAAKzE,MAAO2E,EAASb,SAAlC,QACQa,EAASb,oB,GAhGE5B,a,mCCChB0C,E,kDACnB,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAQRqD,kBAAoB,WAClB,EAAK6B,qBACL,EAAKC,SAAWC,YACd,EAAKF,mBACiB,IAAtB,EAAKlF,MAAMmF,WAbI,EAqBnBE,mBAAqB,SAACC,EAAWC,GAC3B,EAAKvF,MAAMmF,UAAYG,EAAUH,WAGrCK,cAAc,EAAKL,UACnB,EAAKA,SAAWC,YACd,EAAKF,mBACiB,IAAtB,EAAKlF,MAAMmF,YA5BI,EAgCnBD,mBAhCmB,sBAgCE,4BAAAvI,EAAA,yDACd,EAAKqD,MAAMkE,UADG,0EAKOvF,EAAsB,EAAKqB,MAAMkE,WALxC,OAKbrF,EALa,OAMjB,EAAKsB,SAAS,CACZsF,YAAa5G,EAAY4G,YAAc,IACvCC,SAAU7G,EAAY6G,SAAW,MARlB,mIA9BnB,EAAKP,SAAW,KAChB,EAAKzE,MAAQ,CACX+E,YAAa,KACbC,SAAU,MALK,E,mEAkBjBF,cAAcrE,KAAKgE,Y,+BA8BnB,OACE,yBAAKrE,UAAU,oBACb,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,6BAOA,kBAACtE,EAAA,EAAD,CAAKT,UAAU,gCACb,kBAACU,EAAA,EAAD,KACE,kBAAC,IAAD,CACEsE,UAAW,EACXC,WAAY,GACZC,UAAU,UACVvH,GAAG,eACHqC,UAAU,QACVmF,QAAS9E,KAAKT,MAAM+E,YACpBS,gBAAiB,SAAC7F,GAAD,OAAWA,EAAQ,UAEtC,oDAGF,kBAACmB,EAAA,EAAD,KACE,kBAAC,IAAD,CACEsE,UAAW,EACXC,WAAY,GACZE,QAAS9E,KAAKT,MAAMgF,SACpBM,UAAU,UACVvH,GAAG,eACHyH,gBAAiB,SAAC7F,GAAD,OAAWA,EAAQ,OAEtC,kD,GAjFwBkC,a,SCFf4D,E,kDACnB,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IASRoG,gBAVmB,sBAUD,gCAAAzJ,EAAA,yDACZ,EAAKqD,MAAMkE,YAAc,EAAKxD,MAAM2F,YADxB,0EAMG5G,EAAc,EAAKO,MAAMkE,WAN5B,WAMVzG,EANU,QAQJF,GARI,iDAYV+I,EAAW7I,EAAK4B,WAAWF,MAC3BoH,EAAc9I,EAAK4B,WAAWkH,YAElCxJ,QAAQC,IAAIuJ,GAEY,IAApBD,EAASE,OACX,EAAKrG,SAAS,CAAEmG,aAEhB,EAAKnG,SAAS,CAAEmG,SAAU,OAGR,KAAhBC,EACF,EAAKpG,SAAS,CAAEoG,gBAEhB,EAAKpG,SAAS,CAAEoG,YAAa,OA1BjB,kDA6BdxJ,QAAQC,IAAR,MA7Bc,QAgChB,EAAKmD,SAAS,CAAEkG,YAAa,EAAKrG,MAAMkE,YAhCxB,0DAPhB,EAAKxD,MAAQ,CACX4F,SAAU,KACVC,YAAa,KACbF,YAAa,MANE,E,iEA8CjBlF,KAAKiF,oB,+BAIL,OACE,kBAAC,IAAMK,SAAP,KACGtF,KAAKT,MAAM4F,UACV,yBAAKxF,UAAU,eACb,kBAAC4F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,KAAX,CAAgB5F,QAAQ,UAAxB,8BAGCI,KAAKT,MAAM4F,SAAS1B,KAAI,SAACgC,EAASnI,GAAV,OACvB,kBAACiI,EAAA,EAAUC,KAAX,CAAgB5B,IAAKtG,GAAKmI,QAKlC,kBAACpF,EAAA,EAAD,CAAKV,UAAU,YACZK,KAAKT,MAAM6F,aACV,yBAAKzF,UAAU,eACb,kBAAC4F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,KAAX,CAAgB5F,QAAQ,QAAxB,kBACA,kBAAC2F,EAAA,EAAUC,KAAX,KAAiBxF,KAAKT,MAAM6F,qB,GAtEFhE,aC+D3BsE,G,yDA1Db,WAAY7G,GAAQ,IAAD,8BACjB,cAAMA,IAQR8G,qBAAuB,SAACvG,GACtB,EAAKJ,SAAS,CAAEgF,SAAU5E,EAAEH,OAAOC,SAVlB,EAanB4D,oBAAsB,SAAC8C,GACrB,EAAK5G,SAAS,CACZ+D,UAAW6C,EAAQ7C,UACnBP,aAAcoD,EAAQpD,gBAdxB,EAAKjD,MAAQ,CACXwD,UAAW,KACXP,aAAc,KACdwB,SAAU,GALK,E,qDAqBjB,OACE,yBAAKrE,UAAU,QACb,kBAAC,EAAD,MACA,kBAACS,EAAA,EAAD,CAAKT,UAAU,WACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,oCACb,kBAAC,EAAD,CAASmD,oBAAqB9C,KAAK8C,sBACnC,kBAACrC,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,mCACA,kBAACJ,EAAA,EAAKK,QAAN,CACE+E,aAAa,IACb7E,KAAK,SACL8E,IAAI,KACJC,IAAI,IACJhF,SAAUf,KAAK2F,yBAIrB,kBAACtF,EAAA,EAAD,CAAKV,UAAU,YACb,kBAAC,EAAD,CACEqE,SAAUhE,KAAKT,MAAMyE,SACrBjB,UAAW/C,KAAKT,MAAMwD,YAExB,kBAAC1C,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKT,UAAU,gCACb,kBAAC,EAAD,CACEoD,UAAW/C,KAAKT,MAAMwD,qB,GA/CjB5B,IAAMC,Y,qEC+Od4E,G,kDA1Ob,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IAWRoH,UAAY,SAAC7G,GACX,EAAKJ,SAAS,CAAEiH,UAAW7G,IAC3B,IAAI8G,EAAO9G,EAAE+G,WAAWC,MAAM,KAAK,GAAGA,MAAM,KAC5CF,EAAI,UAAMA,EAAK,GAAX,YAAiBA,EAAK,GAAtB,OACJ,EAAKlH,SAAS,CAAEqH,UAAWH,KAhBV,EAmBnBI,UAAY,SAAClH,GACX,EAAKJ,SAAS,CAAEsH,UAAWlH,IAC3B,IAAI8G,EAAO9G,EAAE+G,WAAWC,MAAM,KAAK,GAAGA,MAAM,KAC5CF,EAAI,UAAMA,EAAK,GAAX,YAAiBA,EAAK,GAAtB,OACJ,EAAKlH,SAAS,CAAEuH,UAAWL,KAvBV,EA0BnBvH,WA1BmB,uCA0BN,WAAOO,GAAP,eAAA1D,EAAA,6DACPgL,EAAc,CAChBC,KAAM,EACNhE,WAAY,EAAK5D,MAAM2D,aACvBtD,SAGF,EAAKL,MAAM6H,YAAW,GAPX,kBASH/H,EAAW6H,EAAa,EAAKjH,MAAMd,cAThC,OAUT,EAAKI,MAAM8H,iBACT,UACA,KACA,uCAbO,gDAgBT,EAAK9H,MAAM8H,iBACT,QACA,QACA,iDAnBO,QAsBX,EAAK9H,MAAM6H,YAAW,GAtBX,yDA1BM,wDAmDnBhI,aAnDmB,uCAmDJ,WAAOQ,GAAP,eAAA1D,EAAA,6DACToL,EAAgB,CAClBH,KAAM,EACNhE,WAAY,EAAK5D,MAAM2D,aACvBtD,SAGF,EAAKL,MAAM6H,YAAW,GAPT,kBASLhI,EAAakI,EAAe,EAAKrH,MAAMd,cATlC,OAUX,EAAKI,MAAM8H,iBACT,UACA,KACA,0CAbS,gDAgBX,EAAK9H,MAAM8H,iBACT,QACA,QACA,oDAnBS,QAsBb,EAAK9H,MAAM6H,YAAW,GAtBT,yDAnDI,wDA4EnBG,UA5EmB,sBA4EP,4BAAArL,EAAA,6DACV,EAAKqD,MAAM6H,YAAW,GADZ,SAGJI,EAAgB,CAClBL,KAAM,EACNzD,QAAS,EAAKnE,MAAMkE,UACpBN,WAAY,EAAK5D,MAAM2D,aACvBtD,MAAO,IACP6H,UAAW,EAAKxH,MAAMgH,UACtBS,SAAU,EAAKzH,MAAM8G,WATf,SAWF9H,EAAauI,EAAe,EAAKvH,MAAMd,cAXrC,OAYR,EAAKI,MAAM8H,iBAAiB,UAAW,KAAM,oBAZrC,gDAcR,EAAK9H,MAAM8H,iBACT,QACA,QACA,2CAjBM,QAoBV,EAAK9H,MAAM6H,YAAW,GApBZ,yDA5EO,EAmGnBO,qBAAuB,SAAC7H,GACtB,EAAKJ,SAAS,CAAEP,aAAcW,EAAEH,OAAOC,SAjGvC,EAAKK,MAAQ,CACX+G,UAAW,KACXL,UAAW,KACXI,UAAW,KACXE,UAAW,KACX9H,aAAc,MARC,E,qDAuGT,IAAD,OACP,OACE,6BACE,kBAAC4B,EAAA,EAAD,CAAKV,UAAU,aACb,kBAACuH,GAAA,EAAD,CAAKC,GAAI,EAAGC,WAAW,SAASC,eAAe,UAC7C,kBAAC7C,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,wBAQF,yBAAKvB,MAAO,CAAEC,QAAS,KACrB,kBAACkE,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CAAyBC,MAAOC,MAC9B,kBAAC,KAAD,CACEC,aAAa,WACbC,OAAO,SACPtK,GAAG,oBACHuK,MAAM,eACN3I,MAAOc,KAAKT,MAAM+G,UAClBvF,SAAUf,KAAKsG,UACfwB,oBAAqB,CACnB,aAAc,iBAIlB,kBAAC,KAAD,CACEH,aAAa,WACb/H,QAAQ,UACRgI,OAAO,SACPtK,GAAG,oBACHuK,MAAM,aACN3I,MAAOc,KAAKT,MAAM0G,UAClBlF,SAAUf,KAAKiG,UACf6B,oBAAqB,CACnB,aAAc,mBAKtB,yBAAK3E,MAAO,CAAEC,QAAS,KACrB,kBAAClC,EAAA,EAAD,CACEc,QAAShC,KAAK6G,UACdjH,QAAQ,0BACRV,MAAM,SACN6I,KAAK,QACLvH,MAAM,UACNb,UAAU,UANZ,eAWF,yBAAKwD,MAAO,CAAEC,QAAS,IACrB,kBAACkE,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAACpH,EAAA,EAAD,CAAKT,UAAU,2CACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,YACb,yBAAKA,UAAU,QACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKK,QAAN,CACEC,SAAUf,KAAKiH,qBACfjG,KAAK,OACLC,YAAY,iCACZuC,UAAU,OAKlB,kBAAC8D,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAACQ,GAAA,EAAD,CACED,KAAK,QACLpI,UAAU,mCACV,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,aAOA,kBAACxD,EAAA,EAAD,CACEc,QAAS,kBAAM,EAAKtD,aAAa,MACjCkF,IAAK,IACLhE,QAAQ,0BACRV,MAAM,UAJR,SAOA,kBAACgC,EAAA,EAAD,CACEc,QAAS,kBAAM,EAAKtD,aAAa,IACjCkF,IAAK,EACLhE,QAAQ,0BACRV,MAAM,UAJR,WASF,kBAAC8I,GAAA,EAAD,CACED,KAAK,QACLpI,UAAU,mCACV,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,WAOA,kBAACxD,EAAA,EAAD,CACEc,QAAS,kBAAM,EAAKrD,WAAW,MAC/BiF,IAAK,IACLhE,QAAQ,0BACRV,MAAM,UAJR,SAOA,kBAACgC,EAAA,EAAD,CACEc,QAAS,kBAAM,EAAKrD,WAAW,IAC/BiF,IAAK,EACLhE,QAAQ,2BACRV,MAAM,UAJR,sB,GAzNIiC,IAAMC,W,SC2DjB6G,I,wDA5Db,WAAYpJ,GAAQ,IAAD,8BACjB,cAAMA,IAORiE,oBAAsB,SAAC8C,GACrB,EAAK5G,SAAS,CACZ+D,UAAW6C,EAAQ7C,UACnBP,aAAcoD,EAAQpD,gBAXP,EAenBkE,WAAa,SAACwB,GACZ,EAAKlJ,SAAS,CAAEkJ,QAASA,KAhBR,EAmBnBvB,iBAAmB,SAAC3F,EAAMmH,EAAOC,GAC/B,OAAQpH,GACN,IAAK,UACHqH,uBAAoBC,QAAQF,EAASD,EAAO,KAC5C,MACF,IAAK,QACHE,uBAAoB7I,MAAM4I,EAASD,EAAO,OAvB9C,EAAK5I,MAAQ,CACXwD,UAAW,KACXP,aAAc,MAJC,E,qDAkCjB,OACE,yBAAK7C,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,yBAAD,MACA,kBAACS,EAAA,EAAD,CAAKT,UAAU,WACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,uCACb,kBAAC,EAAD,CAASmD,oBAAqB9C,KAAK8C,uBAErC,kBAACzC,EAAA,EAAD,CAAKV,UAAU,qDACb,kBAAC,GAAD,CACEoD,UAAW/C,KAAKT,MAAMwD,UACtBP,aAAcxC,KAAKT,MAAMiD,aACzBmE,iBAAkB3G,KAAK2G,iBACvBD,WAAY1G,KAAK0G,aAElB1G,KAAKT,MAAM2I,SACV,yBAAKvI,UAAU,sCACb,kBAAC4I,GAAA,EAAD,CAASC,UAAU,SAAS9L,KAAK,mB,GApDrByE,IAAMC,YCPbqH,G,kDACnB,WAAY5J,GAAQ,IAAD,8BACjB,cAAMA,IAQR6J,mBATmB,sBASE,4BAAAlN,EAAA,+EAEIuC,IAFJ,OAEboH,EAFa,OAGjB,EAAKnG,SAAS,CAAEmG,aAHC,gDAKjBvJ,QAAQC,IAAR,MALiB,yDATF,EAmBnB8M,gBAAkB,SAACvJ,GACbA,EAAEH,OAAO2J,QACX,EAAKC,gBAAgBC,KAAK1J,EAAEH,OAAOC,OAEnC,EAAK2J,gBAAgBE,IAAI3J,EAAEH,OAAOC,QAvBnB,EA2BnB8J,oBAAsB,SAAC5J,GACrB,EAAK6J,aAAe7J,EAAEH,OAAOC,OA5BZ,EA+BnBwB,SA/BmB,uCA+BR,WAAOtB,GAAP,SAAA5D,EAAA,6DACT4D,EAAEC,iBADO,SAGP,EAAKR,MAAM6H,YAAW,GAHf,SAIDzI,EAAe,CACnBwI,KAAM,EACNhE,WAAY,EAAK5D,MAAM2D,aACvBQ,QAAS,EAAKnE,MAAMkE,UACpB/E,MAAO,EAAK6K,gBACZzD,YAAa,EAAK6D,eATb,OAWP,EAAKpK,MAAM8H,iBAAiB,UAAW,KAAM,6BAC7C,EAAK9H,MAAM6H,YAAW,GAZf,gDAcP,EAAK7H,MAAM8H,iBACT,QACA,QACA,oDAEF,EAAK9H,MAAM6H,YAAW,GAnBf,QAqBT,EAAK1H,SAAS,CAAEkK,SAAS,IArBhB,yDA/BQ,sDAEjB,EAAKL,gBAAkB,GACvB,EAAKI,aAAe,GACpB,EAAK1J,MAAQ,CACX4F,SAAU,IALK,E,qDAuDT,IAAD,OACP,OACE,kBAAC,IAAMG,SAAP,KACE,wDACA,kBAAC7E,EAAA,EAAD,CAAMC,SAAUV,KAAKU,UACnB,kBAACN,EAAA,EAAD,CAAKT,UAAU,QACZK,KAAKT,MAAM4F,SAAS1B,KAAI,SAACgC,EAAS9B,GAAV,OACvB,kBAACtD,EAAA,EAAD,CAAKV,UAAU,WAAWiE,IAAKD,GAC7B,kBAAClD,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAK0I,MAAN,CACEnI,KAAK,WACL9B,MAAOuG,EAAQ1F,KACf8H,MAAOpC,EAAQ1F,KACfgB,SAAU,EAAK4H,wBAOzB,kBAAClI,EAAA,EAAKE,MAAN,CAAYC,UAAU,iBACpB,kBAACH,EAAA,EAAKI,MAAN,KACE,+CAEF,kBAACJ,EAAA,EAAKK,QAAN,CACEiB,GAAG,WACHqH,KAAK,IACLrI,SAAUf,KAAKgJ,uBAInB,yBAAKrJ,UAAU,iCACb,kBAACuB,EAAA,EAAD,CACEF,KAAK,SACL9B,MAAM,SACNU,QAAQ,0BACRD,UAAU,mBAJZ,iB,GAxF6ByB,aCQpBiI,G,kDACnB,WAAYxK,GAAQ,IAAD,8BACjB,cAAMA,IASRiE,oBAAsB,SAAC8C,GACrB,EAAK5G,SAAS,CACZ+D,UAAW6C,EAAQ7C,UACnBP,aAAcoD,EAAQpD,gBAbP,EAiBnBkE,WAAa,SAACwB,GACZ,EAAKlJ,SAAS,CAAEkJ,QAASA,KAlBR,EAqBnBvB,iBAAmB,SAAC3F,EAAMmH,EAAOC,GAC/B,OAAQpH,GACN,IAAK,UACHqH,uBAAoBC,QAAQF,EAASD,EAAO,KAC5C,MACF,IAAK,QACHE,uBAAoB7I,MAAM4I,EAASD,EAAO,OAzB9C,EAAKU,gBAAkB,GACvB,EAAKtJ,MAAQ,CACXwD,UAAW,KACXP,aAAc,KACd0F,SAAS,GANM,E,qDAoCjB,OACE,yBAAKvI,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,yBAAD,MACA,kBAACS,EAAA,EAAD,CAAKT,UAAU,WACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,sCACb,kBAAC,EAAD,CAASmD,oBAAqB9C,KAAK8C,uBAErC,kBAACzC,EAAA,EAAD,CAAKV,UAAU,iBACb,6BACE,yBAAKA,UAAU,oBACb,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,QAKQ1E,KAAKT,MAAMwD,aAIvB,kBAAC,GAAD,CACE4D,iBAAkB3G,KAAK2G,iBACvBD,WAAY1G,KAAK0G,WACjB3D,UAAW/C,KAAKT,MAAMwD,UACtBP,aAAcxC,KAAKT,MAAMiD,eAE1BxC,KAAKT,MAAM2I,SACV,yBAAKvI,UAAU,sCACb,kBAAC4I,GAAA,EAAD,CAASC,UAAU,SAAS9L,KAAK,mB,GAjEXyE,IAAMC,W,SCLvBkI,G,kDACnB,WAAYzK,GAAQ,IAAD,8BACjB,cAAMA,IASRxB,WAVmB,sBAUN,4BAAA7B,EAAA,6DACP2B,EAAO,EAAKoC,MAAMpC,KADX,SAIT,EAAK0B,MAAM6H,YAAW,GAJb,SAKHrJ,EAAWF,GALR,uBAMH,EAAK0B,MAAM0K,eANR,OAQT,EAAK1K,MAAM8H,iBAAiB,UAAW,KAAM,uBAC7C,EAAK9H,MAAM6H,YAAW,GATb,kDAWT,EAAK7H,MAAM8H,iBACT,QACA,QACA,8CAEF,EAAK9H,MAAM6H,YAAW,GAhBb,QAkBX,EAAK1H,SAAS,CAAEkK,SAAS,IAlBd,0DAVM,EA+BnB3L,WA/BmB,sBA+BN,4BAAA/B,EAAA,6DACP2B,EAAO,EAAKoC,MAAMpC,KADX,SAIT,EAAK0B,MAAM6H,YAAW,GAJb,SAKHnJ,EAAWJ,GALR,uBAMH,EAAK0B,MAAM0K,eANR,OAOT,EAAKvK,SAAS,CAAE7B,KAAM,EAAK0B,MAAM5B,MAAM,KAEvC,EAAK4B,MAAM8H,iBAAiB,UAAW,KAAM,qBAC7C,EAAK9H,MAAM6H,YAAW,GAVb,kDAYT,EAAK7H,MAAM8H,iBACT,QACA,QACA,4CAEF,EAAK9H,MAAM6H,YAAW,GAjBb,QAmBX,EAAK1H,SAAS,CAAEkK,SAAS,IAnBd,0DA/BM,EAqDnBM,QAAU,SAACzK,GACT,GAAKA,EAAME,OAAOC,MAAlB,CAKA,IAAI/B,EAAO,EAAK0B,MAAM5B,MAAMwM,MAAK,SAACtM,GAAD,OAAUA,EAAK4C,MAAQhB,EAAME,OAAOC,SACrE,EAAKF,SAAS,CAAE7B,OAAMuM,eAAe,SALnC,EAAK1K,SAAS,CAAE7B,KAAM,CAAE4C,KAAM,GAAI4J,UAAW,GAAIrO,MAAO,OApD1D,EAAKiE,MAAQ,CACXpC,KAAM,GACN+L,SAAS,EACTQ,eAAe,GANA,E,qDA+DT,IAAD,OACP,OACE,kBAAC,IAAMpE,SAAP,KACE,yBAAK3F,UAAU,oBACb,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,SAChBkE,cAAY,GAJd,cASF,kBAACjE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYM,YAAY,cACtB,kBAACR,EAAA,EAAKK,QAAN,CAAcC,SAAUf,KAAKwJ,QAASzH,GAAG,UACvC,4BAAQ7C,MAAM,GAAG2G,cAAY,EAAC+D,UAAQ,EAACC,UAAQ,GAA/C,yBAGC7J,KAAKnB,MAAM5B,MAAMwG,KAAI,SAACtG,GACrB,OACE,4BAAQ+B,MAAO/B,EAAK4C,KAAM6D,IAAKzG,EAAKG,IAApC,UACMH,EAAK4C,KADX,YACmB5C,EAAKwM,WAAa,WAQ/C,yBAAKhK,UAAU,8BACb,kBAACS,EAAA,EAAD,CAAKT,UAAU,yCACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAiBM,KAAM6J,IAAYtJ,MAAM,UAG3C,kBAACC,EAAA,EAAD,CAAMd,UAAU,QACd,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKK,QAAN,CACE+I,UAAW7J,KAAKT,MAAM2J,QACtBnI,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwB4C,KAAMX,EAAEH,OAAOC,WAG/CA,MAAOc,KAAKT,MAAMpC,KAAK4C,KACvBiB,KAAK,OACLC,YAAY,SACZuC,UAAU,KAId,kBAAC/C,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKK,QAAN,CACE+I,UAAW7J,KAAKT,MAAM2J,QACtBnI,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwBwM,UAAWvK,EAAEH,OAAOC,WAGpDA,MAAOc,KAAKT,MAAMpC,KAAKwM,UACvB3I,KAAK,OACLC,YAAY,YACZuC,UAAU,KAId,kBAAC/C,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKK,QAAN,CACE+I,UAAW7J,KAAKT,MAAM2J,QACtBnI,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwB7B,MAAO8D,EAAEH,OAAOC,WAGhDA,MAAOc,KAAKT,MAAMpC,KAAK7B,MACvB0F,KAAK,OACLC,YAAY,wBACZuC,UAAU,KAId,kBAAC/C,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKK,QAAN,CACE+I,UAAW7J,KAAKT,MAAM2J,QACtBnI,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwBT,KAAM0C,EAAEH,OAAOC,WAG/C6C,GAAG,SACHyB,UAAU,EACVtE,MAAOc,KAAKT,MAAMpC,KAAKT,MACvB,4BAAQwC,MAAM,SAAd,iBACA,4BAAQA,MAAM,UAAd,kBAMR,kBAACkB,EAAA,EAAD,CAAKT,UAAU,yCACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,YACXK,KAAKT,MAAM2J,QAQX,kBAAChI,EAAA,EAAD,CACEtB,QAAQ,0BACRoC,QAAShC,KAAK3C,WACdsC,UAAU,cAHZ,WAPA,kBAACuB,EAAA,EAAD,CACEtB,QAAQ,0BACRoC,QAAS,kBAAM,EAAKhD,SAAS,CAAEkK,SAAS,KACxCvJ,UAAU,aAHZ,WAgBJ,kBAACU,EAAA,EAAD,CAAKV,UAAU,YACb,kBAACuB,EAAA,EAAD,CACEc,QAAShC,KAAKzC,WACdqC,QAAQ,yBACRD,UAAU,aAHZ,kB,GAxLwByB,a,+BCHjB2I,G,kDACnB,WAAYlL,EAAOmL,GAAU,uCACrBnL,EAAOmL,G,qDAIb,OACE,oCACE,kBAACC,GAAA,EAAD,CAAOC,KAAMlK,KAAKnB,MAAMqL,KAAMC,OAAQnK,KAAKnB,MAAMuL,YAAarC,KAAK,MACjE,kBAACkC,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,GAAA,EAAMM,MAAP,CAAaC,SAAS,QAAtB,4EAIF,yBAAK7K,UAAU,eACb,kBAACsK,GAAA,EAAMQ,KAAP,KACE,kBAAC,KAAD,CACEvL,MAAOc,KAAKnB,MAAMzB,aAClB2K,KAAK,MACL2C,cAAc,iB,GAnBKtJ,aCEduJ,G,kDACnB,WAAY9L,GAAQ,IAAD,8BACjB,cAAMA,IASRuL,YAAc,WACZ,EAAKpL,SAAS,CAAEkL,MAAM,EAAOU,aAAc,MAX1B,EAkBnB1N,WAlBmB,uCAkBN,WAAO6B,GAAP,iBAAAvD,EAAA,yDACXuD,EAAMM,iBAEF,EAAKE,MAAMpC,KAAK5B,WAAa,EAAKgE,MAAMpC,KAAK0N,WAHtC,uBAIT,EAAKhM,MAAM8H,iBACT,QACA,QACA,mCAPO,iCAYPxJ,EAAO,EAAKoC,MAAMpC,KAEtB,EAAK0B,MAAM6H,YAAW,GAdX,kBAiBgBxJ,EAAWC,GAjB3B,OAiBLyN,EAjBK,OAkBT,EAAK5L,SAAS,CAAE4L,iBAChB,EAAK/L,MAAM0K,eACX,EAAKuB,aACL,EAAKjM,MAAM8H,iBACT,UACA,KACA,8CAxBO,kDA2BT,EAAK9H,MAAM8H,iBACT,QACA,QACA,mDA9BO,QAkCX,EAAK9H,MAAM6H,YAAW,GAlCX,0DAlBM,sDAGjB,EAAKnH,MAAQ,CACXpC,KAAM,CAAET,KAAM,SACdkO,aAAc,GACdV,MAAM,GANS,E,yDAejBlK,KAAKhB,SAAS,CAAEkL,MAAM,M,+BAwCd,IAAD,OACP,OACE,kBAAC,IAAM5E,SAAP,KACE,yBAAK3F,UAAU,oBACb,kBAAC6E,EAAA,EAAD,CACEC,MAAM,SACN7E,QAAQ,KACRuD,MAAO,CAAE3C,MAAO,QAChBkE,cAAY,GAJd,mBAQF,yBAAK/E,UAAU,oBACb,kBAACc,EAAA,EAAD,CAAMC,SAAUV,KAAK9C,YACnB,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,YACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,gBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwB4C,KAAMX,EAAEH,OAAOC,WAG/CA,MAAOc,KAAKT,MAAMpC,KAAK4C,KACvBiB,KAAK,OACLC,YAAY,kBACZuC,UAAU,MAKhB,kBAACnD,EAAA,EAAD,CAAKV,UAAU,YACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwBwM,UAAWvK,EAAEH,OAAOC,WAGpDA,MAAOc,KAAKT,MAAMpC,KAAKwM,UACvB3I,KAAK,OACLC,YAAY,yBAKlB,kBAACZ,EAAA,EAAD,CAAKV,UAAU,YACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,+BACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwB7B,MAAO8D,EAAEH,OAAOC,WAGhDA,MAAOc,KAAKT,MAAMpC,KAAK7B,MACvB0F,KAAK,QACLC,YAAY,iCACZuC,UAAU,OAMlB,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,iBACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwB5B,SAAU6D,EAAEH,OAAOC,WAGnDA,MAAOc,KAAKT,MAAMpC,KAAK5B,SACvByF,KAAK,WACLC,YAAY,eACZuC,UAAU,MAKhB,kBAACnD,EAAA,EAAD,CAAKV,UAAU,iBACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,iCACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BACA,EAAKoC,MAAMpC,MADZ,IAEF0N,WAAYzL,EAAEH,OAAOC,WAI3BA,MAAOc,KAAKT,MAAMpC,KAAK0N,WACvB7J,KAAK,WACLC,YAAY,eACZuC,UAAU,MAKhB,kBAACnD,EAAA,EAAD,CAAKV,UAAU,iBACb,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,yBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,SAAU,SAAC3B,GAAD,OACR,EAAKJ,SAAS,CACZ7B,KAAK,6BAAM,EAAKoC,MAAMpC,MAAlB,IAAwBT,KAAM0C,EAAEH,OAAOC,WAG/C6C,GAAG,SACHyB,UAAU,GACV,4BAAQtE,MAAM,SAAd,iBACA,4BAAQA,MAAM,UAAd,kBAMR,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,aACb,yBAAKA,UAAU,sCACb,kBAACuB,EAAA,EAAD,CACEF,KAAK,SACL9B,MAAM,SACNU,QAAQ,0BACRD,UAAU,mBAJZ,aAWR,kBAAC,GAAD,CACEvC,aAAc4C,KAAKT,MAAMqL,aACzBR,YAAapK,KAAKoK,YAClBF,KAAMlK,KAAKT,MAAM2K,a,GAnMe9I,aCQvB2J,G,kDACnB,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IAQR6J,mBAAqB,WACnB,EAAKa,gBAVY,EAanBA,aAbmB,sBAaJ,4BAAA/N,EAAA,6DACb,EAAKkL,YAAW,GADH,kBAGOsE,IAHP,OAGP/N,EAHO,OAIX,EAAK+B,SAAS,CAAE/B,QAAOgO,cAAehO,EAAM,KAC5C,EAAKyJ,YAAW,GALL,gDAOX9K,QAAQC,IAAI,6BACZ,EAAK6K,YAAW,GARL,yDAbI,EAyBnBA,WAAa,SAACwB,GACZ,EAAKlJ,SAAS,CAAEkJ,QAASA,KA1BR,EA6BnBvB,iBAAmB,SAAC3F,EAAMmH,EAAOC,GAC/B,OAAQpH,GACN,IAAK,UACHqH,uBAAoBC,QAAQF,EAASD,EAAO,KAC5C,MACF,IAAK,QACHE,uBAAoB7I,MAAM4I,EAASD,EAAO,OAhC9C,EAAK5I,MAAQ,CACXtC,MAAO,GACPiL,SAAS,GALM,E,qDA4CjB,OACE,kBAAC,IAAM5C,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,yBAAD,MAEA,kBAAClF,EAAA,EAAD,CAAKT,UAAU,aACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,YACb,kBAAC,GAAD,CACE1C,MAAO+C,KAAKT,MAAMtC,MAClBsM,aAAcvJ,KAAKuJ,aACnB5C,iBAAkB3G,KAAK2G,iBACvBD,WAAY1G,KAAK0G,cAIrB,kBAACrG,EAAA,EAAD,CAAKV,UAAU,2EACb,kBAAC,GAAD,CACE4J,aAAcvJ,KAAKuJ,aACnB5C,iBAAkB3G,KAAK2G,iBACvBD,WAAY1G,KAAK0G,aAElB1G,KAAKT,MAAM2I,SACV,yBAAKvI,UAAU,sCACb,kBAAC4I,GAAA,EAAD,CAASC,UAAU,SAAS9L,KAAK,mB,GApEdyE,IAAMC,WCQzC,IAAM8J,GAAqB,SAAC,GAAuC,IAA1B9J,EAAyB,EAApC+J,UAAyBC,EAAW,6BAChE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACxM,GAAD,OACNtC,aAAaO,QAAQ,SACnB,kBAACsE,EAAcvC,GAEf,kBAAC,IAAD,CACEgB,GAAI,CACFC,SAAU,IACVP,MAAO,CAAE+L,KAAMzM,EAAM0M,kBASpBC,GAlCf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIP,UAAWvM,IACjC,kBAAC,GAAD,CAAoB8M,KAAK,QAAQP,UAAWzF,IAC5C,kBAAC,GAAD,CAAoBgG,KAAK,SAASP,UAAWJ,KAC7C,kBAAC,GAAD,CAAoBW,KAAK,iBAAiBP,UAAWlD,KACrD,kBAAC,GAAD,CAAoByD,KAAK,YAAYP,UAAW9B,QCXlD9B,I,OAAYoE,SAASC,eAAe,SAE1CC,IAASR,OAAO,kBAAC,GAAD,MAAO9D,M","file":"static/js/main.c932905c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/invernadero.f0c0b509.svg\";","/*\r\n * URL SERVER\r\n */\r\n\r\nconst SERVER_URL = 'http://34.238.41.157:3001';\r\n//const SERVER_URL = 'http://127.0.0.1:3001';\r\n\r\n/*\r\n * SERVER PATHS\r\n */\r\nconst LOGIN_URL = '/api/login';\r\nconst USERS_URL = '/api/users';\r\nconst GROWBEDS_URL = '/api/grow_beds';\r\nconst GREEN_HOUSES_URL = '/api/grow_houses';\r\nconst PEST_URL = '/api/pests';\r\nconst INSPECTIONS_URL = '/api/inspection';\r\nconst LIGHTS_URL = '/api/control/lights';\r\nconst BLINDS_CONTROL_URL = '/api/control/blinds';\r\nconst DOOR_CONTROL_URL = '/api/control/door';\r\n\r\n/*----------------------------------------------------------\r\n* \r\n*                     API REQUESTS\r\n*\r\n ----------------------------------------------------------*/\r\n\r\n/*-----------------------------------------------------------\r\n *                      Users requests\r\n *----------------------------------------------------------*/\r\n\r\nexport const loginUser = async (email, password) => {\r\n  var urlencoded = new URLSearchParams();\r\n  urlencoded.append('email', email);\r\n  urlencoded.append('password', password);\r\n\r\n  console.log('start');\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let res = await fetch(SERVER_URL + LOGIN_URL, requestOptions);\r\n  if (!res.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await res.json();\r\n  localStorage.setItem('token', json.jwt);\r\n  localStorage.setItem('role', json.role);\r\n\r\n  return;\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.users;\r\n};\r\n\r\nexport const createUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.TwoFactorUrl;\r\n};\r\n\r\nexport const updateUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'PUT',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\nexport const deleteUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams();\r\n\r\n  var requestOptions = {\r\n    method: 'DELETE',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\n/*-----------------------------------------------------------\r\n *        Environment requests\r\n *---------------------------------------------------------*/\r\n\r\nexport const getGrowBedEnvironment = async (growbed_id) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n  let response = await fetch(\r\n    SERVER_URL + GROWBEDS_URL + `/${growbed_id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.environment;\r\n};\r\n\r\nexport const getGreenHouses = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GREEN_HOUSES_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.green_houses;\r\n};\r\n\r\nexport const getGrowBeds = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GROWBEDS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.grow_beds;\r\n};\r\n\r\n/**\r\n *                 Diseases\r\n */\r\n\r\nexport const getDiseases = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + PEST_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.pests;\r\n};\r\n\r\nexport const saveInspection = async (inspection) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/json');\r\n\r\n  var raw = JSON.stringify(inspection);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + INSPECTIONS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const getInspection = async (growbed_id) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + INSPECTIONS_URL + `/?growbed_id=${growbed_id}`,\r\n    requestOptions,\r\n  );\r\n  return response.json();\r\n};\r\n\r\n/*\r\n *                    Actions\r\n */\r\n\r\nexport const configLights = async (config, securityCode) => {\r\n  console.log(securityCode);\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + LIGHTS_URL, requestOptions);\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const configBlinds = async (config, securityCode) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + BLINDS_CONTROL_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const configDoor = async (config, securityCode) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + DOOR_CONTROL_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json();\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserTie } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginUser as login } from \"../Utils/Api\";\r\nimport \"../styles/login.css\";\r\nimport { faLeaf } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  onChangeEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onChangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  loginUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await login(this.state.email, this.state.password);\r\n      this.setState({ error: false, login: true });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = (\r\n      <Alert className=\"alert\" variant=\"danger\">\r\n        Usuario o contraseña inválidos\r\n      </Alert>\r\n    );\r\n\r\n    const redirect = (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/home\",\r\n          state: { name: this.state.name },\r\n        }}\r\n      />\r\n    );\r\n\r\n    if (this.state.login) {\r\n      return redirect;\r\n    }\r\n\r\n    return (\r\n      <div className=\"layout\">\r\n        <div className=\"navBar\">\r\n        <FontAwesomeIcon className=\"seedling\" icon={faLeaf} />\r\n          <h3> Sistema de Monitoreo para Invernaderos - MSG</h3>\r\n        </div>\r\n\r\n        <Container className=\"layout\">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <Col className=\"col-sm-4\">\r\n              <div className=\"d-flex justify-content-center icon\">\r\n                <FontAwesomeIcon icon={faUserTie} classame=\"usr\" color=\"gray\" />\r\n              </div>\r\n\r\n              <Form onSubmit={this.loginUser}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Correo Electrónico:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangeEmail}\r\n                    value={this.state.email}\r\n                    type=\"email\"\r\n                    placeholder=\"Ingrese su correo electrónico\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangePassword}\r\n                    value={this.state.password}\r\n                    type=\"password\"\r\n                    placeholder=\"**********\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"btn btn-outline-primary\"  className=\"btn-block\">\r\n                  Iniciar Sesión\r\n                </Button>\r\n              </Form>\r\n              {this.state.error ? errorMessage : null}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navBar.css';\r\n\r\nexport default class NavBarDark extends Component {\r\n  logout = () => {\r\n    localStorage.clear();\r\n  };\r\n\r\n  isAdmin = () => {\r\n    let role = localStorage.getItem('role');\r\n    return role == 'admin' ? true : false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <FontAwesomeIcon className=\"seedling\" icon={faSeedling} />\r\n          MSG\r\n        </Navbar.Brand>\r\n\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/home\">\r\n            Inicio\r\n          </Nav.Link>\r\n          {this.isAdmin() && (\r\n            <Nav.Link as={Link} to=\"/users\">\r\n              Admin Usuarios\r\n            </Nav.Link>\r\n          )}\r\n          {this.isAdmin() && (\r\n            <Nav.Link as={Link} to=\"/diseases\">\r\n              Estado Cama\r\n            </Nav.Link>\r\n          )}\r\n          {this.isAdmin() && (\r\n            <Nav.Link as={Link} to=\"/configactions\">\r\n              Acciones\r\n            </Nav.Link>\r\n          )}\r\n\r\n          <Nav.Link as={Link} to=\"/\">\r\n            <span onClick={this.logout}> Cerrar Sesión </span>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { getGrowBeds, getGreenHouses } from '../Utils/Api';\r\nimport invernadero from '../assets/invernadero.svg';\r\n//import invernadero from '../assets/greenhouse.png';\r\n\r\nexport default class Filters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      growBeds: null,\r\n      greenHouses: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getGrowBedsAndGreenHouses();\r\n  };\r\n\r\n  getGrowBedsAndGreenHouses = async () => {\r\n    let values;\r\n\r\n    try {\r\n      values = await Promise.all([getGrowBeds(), getGreenHouses()]);\r\n    } catch (error) {\r\n      return;\r\n    }\r\n\r\n    this.allGrowBeds = values[0];\r\n\r\n    let greenHouseId = values[1][0].greenhouse;\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse == greenHouseId,\r\n    );\r\n\r\n    this.setState({ greenHouses: values[1], growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  filterGrowBeds = (e) => {\r\n    let greenHouseId = e.target.value;\r\n\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse == greenHouseId,\r\n    );\r\n\r\n    this.setState({ growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  handleGrowBedChange = (e) => {\r\n    let growBedId = e.target.value;\r\n    this.props.handleFiltersChange({\r\n      growBedId,\r\n      greenHouseId: this.state.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"pt-3 text-center\" style={{ padding: 20 }}>\r\n          <h3>Selecionar Cama</h3>\r\n          <img src={invernadero} width=\"120px\" />\r\n        </div>\r\n\r\n        <Form onSubmit={this.createUser}>\r\n          <Form.Group>\r\n            <Form.Label>Invernaderos:</Form.Label>\r\n\r\n            <Form.Control\r\n              onChange={this.filterGrowBeds}\r\n              as=\"select\"\r\n              required={true}>\r\n              {this.state.greenHouses &&\r\n                this.state.greenHouses.map((green_house, idx) => (\r\n                  <option key={idx} value={green_house.greenhouse}>\r\n                    Invernadero {green_house.greenhouse}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Camas:</Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleGrowBedChange}\r\n              as=\"select\"\r\n              required={true}>\r\n              {this.state.growBeds &&\r\n                this.state.growBeds.map((grow_bed, idx) => (\r\n                  <option key={idx} value={grow_bed.growbed}>\r\n                    Cama {grow_bed.growbed}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport GaugeChart from 'react-gauge-chart';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { getGrowBedEnvironment } from '../Utils/Api';\r\nimport '../styles/graphs.css';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = null;\r\n    this.state = {\r\n      temperature: null,\r\n      humidity: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getEnvironmentData();\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000,\r\n    );\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.interval == prevProps.interval) {\r\n      return;\r\n    }\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000,\r\n    );\r\n  };\r\n\r\n  getEnvironmentData = async () => {\r\n    if (!this.props.growBedId) {\r\n      return;\r\n    }\r\n    try {\r\n      let environment = await getGrowBedEnvironment(this.props.growBedId);\r\n      this.setState({\r\n        temperature: environment.temperature / 100,\r\n        humidity: environment.humidity / 100,\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-4 text-center\">\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"h3\"\r\n          style={{ color: 'gray' }}\r\n          gutterBottom>\r\n          Información De La Cama\r\n        </Typography>\r\n        <Row className=\" pt-5 justify-content-center\">\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart1\"\r\n              className=\"gauge\"\r\n              percent={this.state.temperature}\r\n              formatTextValue={(value) => value + '°'}\r\n            />\r\n            <h3>Temperatura (°C)</h3>\r\n          </Col>\r\n\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              percent={this.state.humidity}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart2\"\r\n              formatTextValue={(value) => value + '%'}\r\n            />\r\n            <h3>Humedad (%)</h3>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { getInspection } from '../Utils/Api';\r\n\r\nexport default class ShowDiseases extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      diseases: null,\r\n      observation: null,\r\n      lastGrowBed: null,\r\n    };\r\n  }\r\n\r\n  refreshDiseases = async () => {\r\n    if (this.props.growBedId === this.state.lastGrowBed) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let json = await getInspection(this.props.growBedId);\r\n\r\n      if (!json.ok) {\r\n        return;\r\n      }\r\n\r\n      let diseases = json.inspection.pests;\r\n      let observation = json.inspection.observation;\r\n\r\n      console.log(observation);\r\n\r\n      if (diseases.length !== 0) {\r\n        this.setState({ diseases });\r\n      } else {\r\n        this.setState({ diseases: null });\r\n      }\r\n\r\n      if (observation !== '') {\r\n        this.setState({ observation });\r\n      } else {\r\n        this.setState({ observation: null });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    this.setState({ lastGrowBed: this.props.growBedId });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.refreshDiseases();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.diseases && (\r\n          <div className=\"text-center\">\r\n            <ListGroup>\r\n              <ListGroup.Item variant=\"danger\">\r\n                Enfermedades de la Planta:\r\n              </ListGroup.Item>\r\n              {this.state.diseases.map((disease, id) => (\r\n                <ListGroup.Item key={id}>{disease}</ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </div>\r\n        )}\r\n        <Col className=\"col-md-8\">\r\n          {this.state.observation && (\r\n            <div className=\"text-center\">\r\n              <ListGroup>\r\n                <ListGroup.Item variant=\"info\">Observaciones:</ListGroup.Item>\r\n                <ListGroup.Item>{this.state.observation}</ListGroup.Item>\r\n              </ListGroup>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport Graphs from '../components/Graphs';\r\nimport ShowDiseases from '../components/ShowDiseases';\r\n\r\nimport '../styles/home.css';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      interval: 3,\r\n    };\r\n  }\r\n\r\n  handleIntervalChange = (e) => {\r\n    this.setState({ interval: e.target.value });\r\n  };\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg filters\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n            <Form.Group>\r\n              <Form.Label>Refrescar cada (Segundos):</Form.Label>\r\n              <Form.Control\r\n                defaultValue=\"3\"\r\n                type=\"number\"\r\n                max=\"30\"\r\n                min=\"1\"\r\n                onChange={this.handleIntervalChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col className=\"col-md-8\">\r\n            <Graphs\r\n              interval={this.state.interval}\r\n              growBedId={this.state.growBedId}\r\n            />\r\n            <Col>\r\n              <Row className=\" pt-5 justify-content-center\">\r\n                <ShowDiseases\r\n                  growBedId={this.state.growBedId}\r\n                  // greenHouseId={this.state.greenHouseId}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n/**\r\n \r\n\r\n\r\n */\r\n","import React from 'react';\r\nimport { Row, Button, Col, ButtonGroup, Form } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from '@material-ui/pickers';\r\nimport { configLights, configBlinds, configDoor } from '../Utils/Api';\r\n\r\nclass ActionsComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startTime: null,\r\n      finalTime: null,\r\n      finalHour: null,\r\n      startHour: null,\r\n      securityCode: null,\r\n    };\r\n  }\r\n\r\n  finalTime = (e) => {\r\n    this.setState({ finalTime: e });\r\n    let time = e.toString().split(' ')[4].split(':');\r\n    time = `${time[0]}:${time[1]}:00`;\r\n    this.setState({ finalHour: time });\r\n  };\r\n\r\n  startTime = (e) => {\r\n    this.setState({ startTime: e });\r\n    let time = e.toString().split(' ')[4].split(':');\r\n    time = `${time[0]}:${time[1]}:00`;\r\n    this.setState({ startHour: time });\r\n  };\r\n\r\n  configDoor = async (value) => {\r\n    let Door_config = {\r\n      zone: 1,\r\n      greenhouse: this.props.greenHouseId,\r\n      value,\r\n    };\r\n\r\n    this.props.setLoading(true);\r\n    try {\r\n      await configDoor(Door_config, this.state.securityCode);\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'Se cambío el estado de la puerta',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al abrir o cerrar la puerta',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  configBlinds = async (value) => {\r\n    let blinds_config = {\r\n      zone: 1,\r\n      greenhouse: this.props.greenHouseId,\r\n      value,\r\n    };\r\n\r\n    this.props.setLoading(true);\r\n    try {\r\n      await configBlinds(blinds_config, this.state.securityCode);\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'Se cambío el estado de las cortinas',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al abrir o cerrar las cortinas',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  Configure = async () => {\r\n    this.props.setLoading(true);\r\n    try {\r\n      let lights_config = {\r\n        zone: 1,\r\n        growbed: this.props.growBedId,\r\n        greenhouse: this.props.greenHouseId,\r\n        value: 100,\r\n        time_init: this.state.startHour,\r\n        time_end: this.state.finalHour,\r\n      };\r\n      await configLights(lights_config, this.state.securityCode);\r\n      this.props.showNotification('success', 'Ok', 'Hora Configurada');\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al configurar la hora',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  onChangeSecurityCode = (e) => {\r\n    this.setState({ securityCode: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Col className=\"col-md-20\">\r\n          <Box my={1} alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography\r\n              align=\"center\"\r\n              variant=\"h3\"\r\n              style={{ color: 'gray' }}\r\n              gutterBottom>\r\n              Seleccionar Horario\r\n            </Typography>\r\n          </Box>\r\n          <div style={{ padding: 50 }}>\r\n            <Grid container justify=\"space-around\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardTimePicker\r\n                  inputVariant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"start-time-picker\"\r\n                  label=\"Hora Inicial\"\r\n                  value={this.state.startTime}\r\n                  onChange={this.startTime}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                />\r\n\r\n                <KeyboardTimePicker\r\n                  inputVariant=\"outlined\"\r\n                  variant=\"primary\"\r\n                  margin=\"normal\"\r\n                  id=\"final-time-picker\"\r\n                  label=\"Hora Final\"\r\n                  value={this.state.finalTime}\r\n                  onChange={this.finalTime}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <div style={{ padding: 10 }}>\r\n              <Button\r\n                onClick={this.Configure}\r\n                variant=\"btn btn-outline-primary\"\r\n                value=\"Submit\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className=\"btn-lg\">\r\n                Configurar\r\n              </Button>\r\n            </div>\r\n\r\n            <div style={{ padding: 2 }}>\r\n              <Grid container justify=\"space-around\">\r\n                <Row className=\"justify-content-around w-120 m-4 px-10 \">\r\n                  <Col className=\"col-sm-8\">\r\n                    <div className=\"pb-2\">\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          onChange={this.onChangeSecurityCode}\r\n                          type=\"text\"\r\n                          placeholder=\"Ingrese Código de seguridad\"\r\n                          required={true}\r\n                        />\r\n                      </Form.Group>\r\n                    </div>\r\n                  </Col>\r\n                  <Grid container justify=\"space-around\">\r\n                    <ButtonGroup\r\n                      size=\"large\"\r\n                      className=\"btn-group-vertical btn-group-lg\">\r\n                      <Typography\r\n                        align=\"center\"\r\n                        variant=\"h5\"\r\n                        style={{ color: 'gray' }}\r\n                        gutterBottom>\r\n                        Cortinas:\r\n                      </Typography>\r\n                      <Button\r\n                        onClick={() => this.configBlinds(100)}\r\n                        key={100}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Abrir\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => this.configBlinds(0)}\r\n                        key={0}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Cerrar\r\n                      </Button>\r\n                    </ButtonGroup>\r\n\r\n                    <ButtonGroup\r\n                      size=\"large\"\r\n                      className=\"btn-group-vertical btn-group-lg\">\r\n                      <Typography\r\n                        align=\"center\"\r\n                        variant=\"h5\"\r\n                        style={{ color: 'gray' }}\r\n                        gutterBottom>\r\n                        Puerta:\r\n                      </Typography>\r\n                      <Button\r\n                        onClick={() => this.configDoor(100)}\r\n                        key={100}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Abrir\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => this.configDoor(0)}\r\n                        key={0}\r\n                        variant=\"btn btn-outline-success \"\r\n                        value=\"Submit\">\r\n                        Cerrar\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ActionsComp;\r\n","import React from 'react';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport ActionsComp from '../components/FunctionActions';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nclass ConfigActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <NotificationContainer />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center justify-content-center\">\r\n            <ActionsComp\r\n              growBedId={this.state.growBedId}\r\n              greenHouseId={this.state.greenHouseId}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ConfigActions;\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { getDiseases, saveInspection } from '../Utils/Api';\r\n\r\nexport default class DiseaseForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    this.Observations = '';\r\n    this.state = {\r\n      diseases: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    try {\r\n      let diseases = await getDiseases();\r\n      this.setState({ diseases });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // React Checkboxes onChange Methods\r\n  onChangeDisease = (e) => {\r\n    if (e.target.checked) {\r\n      this.checkedDiseases.push(e.target.value);\r\n    } else {\r\n      this.checkedDiseases.pop(e.target.value);\r\n    }\r\n  };\r\n\r\n  onChangeObservation = (e) => {\r\n    this.Observations = e.target.value;\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      this.props.setLoading(true);\r\n      await saveInspection({\r\n        zone: 1,\r\n        greenhouse: this.props.greenHouseId,\r\n        growbed: this.props.growBedId,\r\n        pests: this.checkedDiseases,\r\n        observation: this.Observations,\r\n      });\r\n      this.props.showNotification('success', 'Ok', 'Estado de la cama enviado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al enviar el estado de la cama',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h5>Seleccione Enfermedades:</h5>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Row className=\"mb-4\">\r\n            {this.state.diseases.map((disease, idx) => (\r\n              <Col className=\"col-lg-2\" key={idx}>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    value={disease.name}\r\n                    label={disease.name}\r\n                    onChange={this.onChangeDisease}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n          <Form.Group controlId=\"Observaciones\">\r\n            <Form.Label>\r\n              <h5>Observaciones:</h5>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              onChange={this.onChangeObservation}\r\n            />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              variant=\"btn btn-outline-primary\"\r\n              className=\"btn-block w-50 \">\r\n              Enviar\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport DiseaseForm from '../components/DiseaseForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Diseases extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <NotificationContainer />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-1 mt-4\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n          </Col>\r\n          <Col className=\"col-md-8 px-5\">\r\n            <div>\r\n              <div className=\"pt-3 text-center\">\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h3\"\r\n                  style={{ color: 'gray' }}\r\n                  gutterBottom>\r\n                  Cama {this.state.growBedId}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <DiseaseForm\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n              growBedId={this.state.growBedId}\r\n              greenHouseId={this.state.greenHouseId}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUsersCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { updateUser, deleteUser } from '../Utils/Api';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class UserCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {},\r\n      editing: false,\r\n      user_selected: false,\r\n    };\r\n  }\r\n\r\n  updateUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await updateUser(user);\r\n      await this.props.refreshUsers();\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario actualizado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al actualizar el usuario',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  deleteUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await deleteUser(user);\r\n      await this.props.refreshUsers();\r\n      this.setState({ user: this.props.users[0] });\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario eliminado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al eliminar el usuario',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  setUser = (event) => {\r\n    if (!event.target.value) {\r\n      this.setState({ user: { name: '', last_name: '', email: '' } });\r\n      return;\r\n    }\r\n\r\n    let user = this.props.users.find((user) => user.name == event.target.value);\r\n    this.setState({ user, user_selected: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-1 text-center\">\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h4\"\r\n            style={{ color: 'black' }}\r\n            gutterBottom>\r\n            Usuarios:\r\n          </Typography>\r\n        </div>\r\n\r\n        <Form>\r\n          <Form.Group placeholder=\"Seleccione\">\r\n            <Form.Control onChange={this.setUser} as=\"select\">\r\n              <option value=\"\" defaultValue selected disabled>\r\n                Seleccione un usuario\r\n              </option>\r\n              {this.props.users.map((user) => {\r\n                return (\r\n                  <option value={user.name} key={user.id}>\r\n                    {`${user.name} ${user.last_name || ''}`}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className=\"text-center pb-3 shadow-lg\">\r\n          <Row className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"icon p-0 m-0\">\r\n              <FontAwesomeIcon icon={faUsersCog} color=\"gray\" />\r\n            </div>\r\n\r\n            <Form className=\"w-75\">\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.name}\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, last_name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.last_name}\r\n                  type=\"text\"\r\n                  placeholder=\"Apellidos\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, email: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.email}\r\n                  type=\"text\"\r\n                  placeholder=\"Correo Electrónico\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, role: e.target.value },\r\n                    })\r\n                  }\r\n                  as=\"select\"\r\n                  required={true}\r\n                  value={this.state.user.role}>\r\n                  <option value=\"admin\">Administrador</option>\r\n                  <option value=\"viewer\">Observador</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-around w-100 m-0 px-3\">\r\n            <Col className=\"col-md-5\">\r\n              {!this.state.editing ? (\r\n                <Button\r\n                  variant=\"btn btn-outline-primary\"\r\n                  onClick={() => this.setState({ editing: true })}\r\n                  className=\"btn-block\">\r\n                  Editar\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"btn btn-outline-primary\"\r\n                  onClick={this.updateUser}\r\n                  className=\" btn-block\">\r\n                  Guardar\r\n                </Button>\r\n              )}\r\n            </Col>\r\n\r\n            <Col className=\"col-md-5\">\r\n              <Button\r\n                onClick={this.deleteUser}\r\n                variant=\"btn btn-outline-danger\"\r\n                className=\"btn-block\">\r\n                Borrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport QRCode from 'qrcode.react';\r\n\r\nexport default class QRgen extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal show={this.props.show} onHide={this.props.handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title centered=\"true\">\r\n              Escaneé su Código con su aplicacion de autenticación preferida\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <div className=\"text-center\">\r\n            <Modal.Body>\r\n              <QRCode\r\n                value={this.props.TwoFactorUrl}\r\n                size=\"400\"\r\n                includeMargin=\"true\"\r\n              />\r\n            </Modal.Body>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { createUser } from '../Utils/Api';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport QRgen from '../components/QRgenerator';\r\n\r\nexport default class CreateUserForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: { role: 'admin' },\r\n      twoFactorUrl: '',\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false, twoFactorUrl: '' });\r\n  };\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  createUser = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.user.password !== this.state.user.password_v) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Las contraseñas no coinciden',\r\n      );\r\n      return;\r\n    }\r\n\r\n    let user = this.state.user;\r\n\r\n    this.props.setLoading(true);\r\n\r\n    try {\r\n      let twoFactorUrl = await createUser(user);\r\n      this.setState({ twoFactorUrl });\r\n      this.props.refreshUsers();\r\n      this.handleShow();\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'El usuario se ha creado satisfactoriamente',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        '¡Ups!, algo salió mal al crear el usuario',\r\n      );\r\n    }\r\n\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-4 text-center\">\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            style={{ color: 'gray' }}\r\n            gutterBottom>\r\n            Crear Usuario:\r\n          </Typography>\r\n        </div>\r\n        <div className=\"pt-5 text-center\">\r\n          <Form onSubmit={this.createUser}>\r\n            <Row>\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Nombre:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, name: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.name}\r\n                    type=\"text\"\r\n                    placeholder=\"Ingresar Nombre\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Apellidos:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, last_name: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.last_name}\r\n                    type=\"text\"\r\n                    placeholder=\"Ingresar Apellidos\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Correo Electrónico:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, email: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.email}\r\n                    type=\"email\"\r\n                    placeholder=\"Ingresar Correo Electrónico\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, password: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.password}\r\n                    type=\"password\"\r\n                    placeholder=\"************\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>Confirmar Contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: {\r\n                          ...this.state.user,\r\n                          password_v: e.target.value,\r\n                        },\r\n                      })\r\n                    }\r\n                    value={this.state.user.password_v}\r\n                    type=\"password\"\r\n                    placeholder=\"************\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>Seleccionar Rol:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, role: e.target.value },\r\n                      })\r\n                    }\r\n                    as=\"select\"\r\n                    required={true}>\r\n                    <option value=\"admin\">Administrador</option>\r\n                    <option value=\"viewer\">Observador</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"col-sm-15\">\r\n                <div className=\"d-flex justify-content-center pt-5\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    variant=\"btn btn-outline-primary\"\r\n                    className=\"btn-block w-50 \">\r\n                    Crear\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <QRgen\r\n            TwoFactorUrl={this.state.twoFactorUrl}\r\n            handleClose={this.handleClose}\r\n            show={this.state.show}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\n\r\nimport UserCard from '../components/UserCard';\r\nimport CreateUserForm from '../components/CreateUserForm';\r\n\r\nimport * as api from '../Utils/Api';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Users extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.refreshUsers();\r\n  };\r\n\r\n  refreshUsers = async () => {\r\n    this.setLoading(true);\r\n    try {\r\n      let users = await api.getAllUsers();\r\n      this.setState({ users, selected_user: users[0] });\r\n      this.setLoading(false);\r\n    } catch (e) {\r\n      console.log('Error fetching users' + e);\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBarDark></NavBarDark>\r\n        <NotificationContainer />\r\n\r\n        <Row className=\"mt-2 mx-2\">\r\n          <Col className=\"col-sm-3\">\r\n            <UserCard\r\n              users={this.state.users}\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n          </Col>\r\n\r\n          <Col className=\"col-md-9 d-flex flex-column justify-content-stretch align-items-stretch\">\r\n            <CreateUserForm\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport ConfigActions from '../pages/ConfigActions';\r\nimport Diseases from '../pages/Diseases';\r\nimport Users from '../pages/Users';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <AuthenticatedRoute path=\"/home\" component={HomePage} />\r\n        <AuthenticatedRoute path=\"/users\" component={Users} />\r\n        <AuthenticatedRoute path=\"/configactions\" component={ConfigActions} />\r\n        <AuthenticatedRoute path=\"/diseases\" component={Diseases} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem('token') ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nconst container = document.getElementById('root')\r\n\r\nReactDOM.render(<App/>,container)\r\n"],"sourceRoot":""}