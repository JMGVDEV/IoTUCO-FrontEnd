{"version":3,"sources":["Utils/Api.js","pages/LoginPage.jsx","components/NavBarDark.jsx","components/Filters.jsx","components/Graphs.jsx","components/ShowDiseases.jsx","pages/HomePage.jsx","components/FunctionActions.jsx","pages/ConfigActions.jsx","components/DiseaseForm.jsx","pages/Diseases.jsx","components/UserCard.jsx","components/QRgenerator.jsx","components/CreateUserForm.jsx","pages/Users.jsx","pages/GHCamas.jsx","pages/GEvents.jsx","pages/GGradosDia.jsx","pages/GDiseases.jsx","components/App.js","index.js"],"names":["SERVER_URL","loginUser","email","password","a","urlencoded","URLSearchParams","append","console","log","requestOptions","method","body","redirect","fetch","res","ok","Error","json","localStorage","setItem","jwt","role","getAllUsers","myHeaders","Headers","getItem","headers","response","users","createUser","user","TwoFactorUrl","updateUser","id","deleteUser","getGrowBedEnvironment","growbed_id","environment","getGreenHouses","green_houses","getGrowBeds","grow_beds","getDiseases","pests","saveInspection","inspection","raw","JSON","stringify","getInspection","configLights","config","securityCode","configBlinds","configDoor","getDegreesDay","greenhouse","growbed","data","getEvents","getHistoricalEnvironment","getDiseasesCount","LoginPage","props","onChangeEmail","event","setState","target","value","onChangePassword","e","preventDefault","login","state","error","errorMessage","Alert","className","variant","to","pathname","name","this","icon","faLeaf","Container","Row","Col","classame","color","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Button","React","Component","NavBarDark","logout","clear","isAdmin","isViewer","Navbar","bg","Brand","faSeedling","Nav","Link","as","NavDropdown","title","Item","onClick","Filters","componentDidMount","getGrowBedsAndGreenHouses","Promise","all","values","allGrowBeds","greenHouseId","growBeds","filter","growBed","greenHouses","handleFiltersChange","growBedId","filterGrowBeds","handleGrowBedChange","style","padding","size","width","required","map","green_house","idx","key","disabled","grow_bed","Graphs","getEnvironmentData","interval","setInterval","componentDidUpdate","prevProps","prevState","clearInterval","temperature","humidity","Typography","align","gutterBottom","animDelay","nrOfLevels","textColor","percent","formatTextValue","ShowDiseases","refreshDiseases","lastGrowBed","diseases","observation","length","Fragment","ListGroup","disease","HomePage","handleIntervalChange","filters","defaultValue","max","min","ActionsComp","finalTime","time","toString","split","finalHour","startTime","startHour","Door_config","zone","setLoading","showNotification","blinds_config","Configure","lights_config","time_init","time_end","onChangeSecurityCode","Box","my","alignItems","justifyContent","Grid","container","justify","utils","DateFnsUtils","inputVariant","margin","label","KeyboardButtonProps","ButtonGroup","ConfigActions","loading","message","NotificationManager","success","Spinner","animation","DiseaseForm","componentWillMount","onChangeDisease","checked","checkedDiseases","push","pop","onChangeObservation","Observations","editing","Check","rows","Diseases","UserCard","refreshUsers","setUser","find","user_selected","last_name","selected","QRgen","Modal","show","onHide","handleClose","Header","closeButton","Title","centered","Body","includeMargin","CreateUserForm","twoFactorUrl","password_v","handleShow","auth","zxcvbn","score","BoxDisable","minLength","minScore","shortScoreWord","scoreWords","Users","api","selected_user","DB4","getData","series","options","xaxis","categories","date","theme","palette","chart","height","dataLabels","enabled","stroke","curve","tooltip","x","format","DB2","stacked","plotOptions","bar","horizontal","colors","text","offsetY","yaxis","y","formatter","val","fill","opacity","legend","position","horizontalAlign","offsetX","DB3","degrees","columnWidth","endingShape","labels","rotate","undefined","datetimeUTC","datetimeFormatter","year","month","day","hour","toggle","pie","customScale","donut","onItemClick","toggleDataSeries","responsive","breakpoint","fontSize","fontWeight","AuthenticatedRoute","component","rest","render","from","location","App","exact","path","DB1","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.df6e4c12.chunk.js","sourcesContent":["/*\r\n * URL SERVER\r\n */\r\n\r\nconst SERVER_URL = 'http://3.22.57.173:3000';\r\n//const SERVER_URL = 'http://192.168.1.100:3001';\r\n\r\n/*\r\n * SERVER PATHS\r\n */\r\nconst LOGIN_URL = '/api/login';\r\nconst USERS_URL = '/api/users';\r\nconst GROWBEDS_URL = '/api/grow_beds';\r\nconst GREEN_HOUSES_URL = '/api/grow_houses';\r\nconst PEST_URL = '/api/pests';\r\nconst INSPECTIONS_URL = '/api/inspection';\r\nconst LIGHTS_URL = '/api/control/lights';\r\nconst BLINDS_CONTROL_URL = '/api/control/blinds';\r\nconst DOOR_CONTROL_URL = '/api/control/door';\r\n\r\nconst DB_DEGREES_DAY = '/api/dashboards/degrees';\r\nconst DB_EVENTS = '/api/dashboards/events';\r\nconst DB_HISTORICAL = '/api/dashboards/historical';\r\nconst DB_DISEASES = '/api/dashboards/diseases';\r\n\r\n/*----------------------------------------------------------\r\n* \r\n*                     API REQUESTS\r\n*\r\n ----------------------------------------------------------*/\r\n\r\n/*-----------------------------------------------------------\r\n *                      Users requests\r\n *----------------------------------------------------------*/\r\n\r\nexport const loginUser = async (email, password) => {\r\n  var urlencoded = new URLSearchParams();\r\n  urlencoded.append('email', email);\r\n  urlencoded.append('password', password);\r\n\r\n  console.log('start');\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let res = await fetch(SERVER_URL + LOGIN_URL, requestOptions);\r\n  if (!res.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await res.json();\r\n  localStorage.setItem('token', json.jwt);\r\n  localStorage.setItem('role', json.role);\r\n\r\n  return;\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.users;\r\n};\r\n\r\nexport const createUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.TwoFactorUrl;\r\n};\r\n\r\nexport const updateUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'PUT',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\nexport const deleteUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams();\r\n\r\n  var requestOptions = {\r\n    method: 'DELETE',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\n/*-----------------------------------------------------------\r\n *        Environment requests\r\n *---------------------------------------------------------*/\r\n\r\nexport const getGrowBedEnvironment = async (growbed_id) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n  let response = await fetch(\r\n    SERVER_URL + GROWBEDS_URL + `/${growbed_id}`,\r\n    requestOptions,\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.environment;\r\n};\r\n\r\nexport const getGreenHouses = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GREEN_HOUSES_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.green_houses;\r\n};\r\n\r\nexport const getGrowBeds = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GROWBEDS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.grow_beds;\r\n};\r\n\r\n/**\r\n *                 Diseases\r\n */\r\n\r\nexport const getDiseases = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + PEST_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.pests;\r\n};\r\n\r\nexport const saveInspection = async (inspection) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/json');\r\n\r\n  var raw = JSON.stringify(inspection);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + INSPECTIONS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const getInspection = async (growbed_id) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + INSPECTIONS_URL + `/?growbed_id=${growbed_id}`,\r\n    requestOptions,\r\n  );\r\n  return response.json();\r\n};\r\n\r\n/*\r\n *                    Actions\r\n */\r\n\r\nexport const configLights = async (config, securityCode) => {\r\n  console.log(securityCode);\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + LIGHTS_URL, requestOptions);\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const configBlinds = async (config, securityCode) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + BLINDS_CONTROL_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const configDoor = async (config, securityCode) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('totp_code', securityCode);\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var urlencoded = new URLSearchParams(config);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + DOOR_CONTROL_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n/*\r\n *                    Dashboards\r\n */\r\n\r\nexport const getDegreesDay = async (greenhouse, growbed) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let data = await fetch(\r\n    SERVER_URL +\r\n      DB_DEGREES_DAY +\r\n      `?greenhouse=${greenhouse}&growbed=${growbed}`,\r\n    requestOptions,\r\n  );\r\n  data = await data.json();\r\n  return data;\r\n};\r\n\r\nexport const getEvents = async (greenhouse) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + DB_EVENTS + `?greenhouse=${greenhouse}`,\r\n    requestOptions,\r\n  );\r\n  return response.json();\r\n};\r\n\r\nexport const getHistoricalEnvironment = async (greenhouse, growbed) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + DB_HISTORICAL + `?growbed=${growbed}&greenhouse=${greenhouse}`,\r\n    requestOptions,\r\n  );\r\n  return response.json();\r\n};\r\n\r\nexport const getDiseasesCount = async (greenhouse) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + DB_DISEASES + `?greenhouse=${greenhouse}`,\r\n    requestOptions,\r\n  );\r\n\r\n  return response.json();\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginUser as login } from \"../Utils/Api\";\r\nimport \"../styles/login.css\";\r\nimport { faLeaf } from '@fortawesome/free-solid-svg-icons';\r\nimport { GiFarmer } from \"react-icons/gi\";\r\n\r\n//AiOutlineFundView \r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  onChangeEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onChangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  loginUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await login(this.state.email, this.state.password);\r\n      this.setState({ error: false, login: true });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = (\r\n      <Alert className=\"alert\" variant=\"danger\">\r\n        Usuario o contraseña inválidos\r\n      </Alert>\r\n    );\r\n\r\n    const redirect = (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/home\",\r\n          state: { name: this.state.name },\r\n        }}\r\n      />\r\n    );\r\n\r\n    if (this.state.login) {\r\n      return redirect;\r\n    }\r\n\r\n    return (\r\n      <div className=\"layout\">\r\n        <div className=\"navBar\">\r\n        <FontAwesomeIcon className=\"seedling\" icon={faLeaf} />\r\n          <h3> Sistema de Monitoreo para Invernaderos - MSG</h3>\r\n        </div>\r\n\r\n        <Container className=\"layout\">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <Col className=\"col-sm-4\">\r\n              <div className=\"d-flex justify-content-center icon\">\r\n                <GiFarmer classame=\"usr\" color=\"2AC218\" />\r\n              </div>\r\n\r\n              <Form onSubmit={this.loginUser}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Correo Electrónico:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangeEmail}\r\n                    value={this.state.email}\r\n                    type=\"email\"\r\n                    placeholder=\"Ingrese su correo electrónico\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangePassword}\r\n                    value={this.state.password}\r\n                    type=\"password\"\r\n                    placeholder=\"**********\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"btn btn-outline-primary\"  className=\"btn-block\">\r\n                  Iniciar Sesión\r\n                </Button>\r\n              </Form>\r\n              {this.state.error ? errorMessage : null}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navBar.css';\r\n\r\nexport default class NavBarDark extends Component {\r\n  logout = () => {\r\n    localStorage.clear();\r\n  };\r\n\r\n  isAdmin = () => {\r\n    let role = localStorage.getItem('role');\r\n    return role === 'admin' ? true : false;\r\n  };\r\n\r\n  isViewer = () => {\r\n    let role = localStorage.getItem('role');\r\n    return role === 'viewer' ? true : false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <FontAwesomeIcon className=\"seedling\" icon={faSeedling} />\r\n          MSG\r\n        </Navbar.Brand>\r\n\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/home\">\r\n            Inicio\r\n          </Nav.Link>\r\n          {this.isAdmin() && (\r\n            <Nav.Link as={Link} to=\"/users\">\r\n              Admin Usuarios\r\n            </Nav.Link>\r\n          )}\r\n          {this.isViewer() && (\r\n            <Nav.Link as={Link} to=\"/diseases\">\r\n              Estado Cama\r\n            </Nav.Link>\r\n          )}\r\n          {this.isViewer() && (\r\n            <Nav.Link as={Link} to=\"/configactions\">\r\n              Acciones\r\n            </Nav.Link>\r\n          )}\r\n          <NavDropdown title=\"DashBoards\">\r\n            <NavDropdown.Item as={Link} to=\"/DB1\">\r\n              Historial de camas\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/DB2\">\r\n              Gráfica de eventos\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/DB3\">\r\n              Gráfica grados día\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/DB4\">\r\n              Gráfica de enfermedades\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link as={Link} to=\"/\">\r\n            <span onClick={this.logout}> Cerrar Sesión </span>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { getGrowBeds, getGreenHouses } from '../Utils/Api';\r\nimport { GiGreenhouse } from 'react-icons/gi';\r\n//import invernadero from '../assets/greenhouse.png';\r\n\r\nexport default class Filters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      growBeds: null,\r\n      greenHouses: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getGrowBedsAndGreenHouses();\r\n  };\r\n\r\n  getGrowBedsAndGreenHouses = async () => {\r\n    let values;\r\n\r\n    try {\r\n      values = await Promise.all([getGrowBeds(), getGreenHouses()]);\r\n    } catch (error) {\r\n      return;\r\n    }\r\n\r\n    this.allGrowBeds = values[0];\r\n\r\n    let greenHouseId = values[1][0].greenhouse;\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse === greenHouseId,\r\n    );\r\n\r\n    this.setState({ greenHouses: values[1], growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  filterGrowBeds = (e) => {\r\n    let greenHouseId = e.target.value;\r\n\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse === greenHouseId,\r\n    );\r\n\r\n    this.setState({ growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  handleGrowBedChange = (e) => {\r\n    let growBedId = e.target.value;\r\n    this.props.handleFiltersChange({\r\n      growBedId,\r\n      greenHouseId: this.state.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"pt-3 text-center\" style={{ padding: 20 }}>\r\n          <h3>Seleccionar Cama</h3>\r\n          <GiGreenhouse\r\n            classame=\"usr\"\r\n            color=\"2AC218\"\r\n            size=\"120px\"\r\n            width=\"200px\"\r\n          />\r\n        </div>\r\n\r\n        <Form onSubmit={this.createUser}>\r\n          <Form.Group>\r\n            <Form.Label>Invernaderos:</Form.Label>\r\n\r\n            <Form.Control\r\n              onChange={this.filterGrowBeds}\r\n              as=\"select\"\r\n              required={true}>\r\n              {this.state.greenHouses &&\r\n                this.state.greenHouses.map((green_house, idx) => (\r\n                  <option key={idx} value={green_house.greenhouse}>\r\n                    Invernadero {green_house.greenhouse}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Camas:</Form.Label>\r\n            <Form.Control\r\n              disabled={this.props.disabled || false}\r\n              onChange={this.handleGrowBedChange}\r\n              as=\"select\"\r\n              required={true}>\r\n              {this.state.growBeds &&\r\n                this.state.growBeds.map((grow_bed, idx) => (\r\n                  <option key={idx} value={grow_bed.growbed}>\r\n                    Cama {grow_bed.growbed}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport GaugeChart from 'react-gauge-chart';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { getGrowBedEnvironment } from '../Utils/Api';\r\nimport '../styles/graphs.css';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = null;\r\n    this.state = {\r\n      temperature: null,\r\n      humidity: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getEnvironmentData();\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000,\r\n    );\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.interval === prevProps.interval) {\r\n      return;\r\n    }\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000,\r\n    );\r\n  };\r\n\r\n  getEnvironmentData = async () => {\r\n    if (!this.props.growBedId) {\r\n      return;\r\n    }\r\n    try {\r\n      let environment = await getGrowBedEnvironment(this.props.growBedId);\r\n      this.setState({\r\n        temperature: environment.temperature / 100,\r\n        humidity: environment.humidity / 100,\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-4 text-center\">\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"h3\"\r\n          style={{ color: 'gray' }}\r\n          gutterBottom>\r\n          Información De La Cama\r\n        </Typography>\r\n        <Row className=\" pt-5 justify-content-center\">\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart1\"\r\n              className=\"gauge\"\r\n              percent={this.state.temperature}\r\n              formatTextValue={(value) => value + '°'}\r\n            />\r\n            <h3>Temperatura (°C)</h3>\r\n          </Col>\r\n\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              percent={this.state.humidity}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart2\"\r\n              formatTextValue={(value) => value + '%'}\r\n            />\r\n            <h3>Humedad (%)</h3>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { getInspection } from '../Utils/Api';\r\n\r\nexport default class ShowDiseases extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      diseases: null,\r\n      observation: null,\r\n      lastGrowBed: null,\r\n    };\r\n  }\r\n\r\n  refreshDiseases = async () => {\r\n    if (this.props.growBedId === this.state.lastGrowBed) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let json = await getInspection(this.props.growBedId);\r\n\r\n      if (!json.ok) {\r\n        return;\r\n      }\r\n\r\n      let diseases = json.inspection.pests;\r\n      let observation = json.inspection.observation;\r\n\r\n      console.log(observation);\r\n\r\n      if (diseases.length !== 0) {\r\n        this.setState({ diseases });\r\n      } else {\r\n        this.setState({ diseases: null });\r\n      }\r\n\r\n      if (observation !== '') {\r\n        this.setState({ observation });\r\n      } else {\r\n        this.setState({ observation: null });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    this.setState({ lastGrowBed: this.props.growBedId });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.refreshDiseases();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.diseases && (\r\n          <div className=\"text-center\">\r\n            <ListGroup>\r\n              <ListGroup.Item variant=\"danger\">\r\n                Enfermedades de la Planta:\r\n              </ListGroup.Item>\r\n              {this.state.diseases.map((disease, id) => (\r\n                <ListGroup.Item key={id}>{disease}</ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </div>\r\n        )}\r\n        <Col className=\"col-md-8\">\r\n          {this.state.observation && (\r\n            <div className=\"text-center\">\r\n              <ListGroup>\r\n                <ListGroup.Item variant=\"info\">Observaciones:</ListGroup.Item>\r\n                <ListGroup.Item>{this.state.observation}</ListGroup.Item>\r\n              </ListGroup>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport Graphs from '../components/Graphs';\r\nimport ShowDiseases from '../components/ShowDiseases';\r\n\r\nimport '../styles/home.css';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      interval: 3,\r\n    };\r\n  }\r\n\r\n  handleIntervalChange = (e) => {\r\n    this.setState({ interval: e.target.value });\r\n  };\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg filters\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n            <Form.Group>\r\n              <Form.Label>Refrescar cada (Segundos):</Form.Label>\r\n              <Form.Control\r\n                defaultValue=\"3\"\r\n                type=\"number\"\r\n                max=\"30\"\r\n                min=\"1\"\r\n                onChange={this.handleIntervalChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col className=\"col-md-8\">\r\n            <Graphs\r\n              interval={this.state.interval}\r\n              growBedId={this.state.growBedId}\r\n            />\r\n            <Col>\r\n              <Row className=\" pt-5 justify-content-center\">\r\n                <ShowDiseases\r\n                  growBedId={this.state.growBedId}\r\n                  // greenHouseId={this.state.greenHouseId}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n/**\r\n \r\n\r\n\r\n */\r\n","import React from 'react';\r\nimport { Row, Button, Col, ButtonGroup, Form } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from '@material-ui/pickers';\r\nimport { configLights, configBlinds, configDoor } from '../Utils/Api';\r\n\r\nclass ActionsComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startTime: null,\r\n      finalTime: null,\r\n      finalHour: null,\r\n      startHour: null,\r\n      securityCode: null,\r\n    };\r\n  }\r\n\r\n  finalTime = (e) => {\r\n    this.setState({ finalTime: e });\r\n    let time = e.toString().split(' ')[4].split(':');\r\n    time = `${time[0]}:${time[1]}:00`;\r\n    this.setState({ finalHour: time });\r\n  };\r\n\r\n  startTime = (e) => {\r\n    this.setState({ startTime: e });\r\n    let time = e.toString().split(' ')[4].split(':');\r\n    time = `${time[0]}:${time[1]}:00`;\r\n    this.setState({ startHour: time });\r\n  };\r\n\r\n  configDoor = async (value) => {\r\n    let Door_config = {\r\n      zone: 1,\r\n      greenhouse: this.props.greenHouseId,\r\n      value,\r\n    };\r\n\r\n    this.props.setLoading(true);\r\n    try {\r\n      await configDoor(Door_config, this.state.securityCode);\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'Se cambío el estado de la puerta',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al abrir o cerrar la puerta',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  configBlinds = async (value) => {\r\n    let blinds_config = {\r\n      zone: 1,\r\n      greenhouse: this.props.greenHouseId,\r\n      value,\r\n    };\r\n\r\n    this.props.setLoading(true);\r\n    try {\r\n      await configBlinds(blinds_config, this.state.securityCode);\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'Se cambío el estado de las cortinas',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al abrir o cerrar las cortinas',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  Configure = async () => {\r\n    this.props.setLoading(true);\r\n    try {\r\n      let lights_config = {\r\n        zone: 1,\r\n        growbed: this.props.growBedId,\r\n        greenhouse: this.props.greenHouseId,\r\n        value: 100,\r\n        time_init: this.state.startHour,\r\n        time_end: this.state.finalHour,\r\n      };\r\n      await configLights(lights_config, this.state.securityCode);\r\n      this.props.showNotification('success', 'Ok', 'Hora Configurada');\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al configurar la hora',\r\n      );\r\n    }\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  onChangeSecurityCode = (e) => {\r\n    this.setState({ securityCode: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Col className=\"col-md-10\">\r\n          <Box my={1} alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography\r\n              align=\"center\"\r\n              variant=\"h3\"\r\n              style={{ color: 'gray' }}\r\n              gutterBottom>\r\n              Seleccionar Horario\r\n            </Typography>\r\n          </Box>\r\n          <div style={{ padding: 50 }}>\r\n            <Grid container justify=\"space-around\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardTimePicker\r\n                  inputVariant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"start-time-picker\"\r\n                  label=\"Hora Inicial\"\r\n                  value={this.state.startTime}\r\n                  onChange={this.startTime}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                />\r\n\r\n                <KeyboardTimePicker\r\n                  inputVariant=\"outlined\"\r\n                  variant=\"primary\"\r\n                  margin=\"normal\"\r\n                  id=\"final-time-picker\"\r\n                  label=\"Hora Final\"\r\n                  value={this.state.finalTime}\r\n                  onChange={this.finalTime}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <div style={{ padding: 10 }}>\r\n              <Button\r\n                onClick={this.Configure}\r\n                variant=\"btn btn-outline-primary\"\r\n                value=\"Submit\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className=\"btn-lg\">\r\n                Configurar\r\n              </Button>\r\n            </div>\r\n\r\n            <div style={{ padding: 2 }}>\r\n              <Grid container justify=\"space-around\">\r\n                <Row className=\"justify-content-around w-120 m-4 px-10 \">\r\n                  <Col className=\"col-sm-8\">\r\n                    <div className=\"pb-2\">\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          onChange={this.onChangeSecurityCode}\r\n                          type=\"text\"\r\n                          placeholder=\"Ingrese Código de seguridad\"\r\n                          required={true}\r\n                        />\r\n                      </Form.Group>\r\n                    </div>\r\n                  </Col>\r\n                  <Grid container justify=\"space-around\">\r\n                    <ButtonGroup\r\n                      size=\"large\"\r\n                      className=\"btn-group-vertical btn-group-lg\">\r\n                      <Typography\r\n                        align=\"center\"\r\n                        variant=\"h5\"\r\n                        style={{ color: 'gray' }}\r\n                        gutterBottom>\r\n                        Cortinas:\r\n                      </Typography>\r\n                      <Button\r\n                        onClick={() => this.configBlinds(100)}\r\n                        key={100}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Abrir\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => this.configBlinds(0)}\r\n                        key={0}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Cerrar\r\n                      </Button>\r\n                    </ButtonGroup>\r\n\r\n                    <ButtonGroup\r\n                      size=\"large\"\r\n                      className=\"btn-group-vertical btn-group-lg\">\r\n                      <Typography\r\n                        align=\"center\"\r\n                        variant=\"h5\"\r\n                        style={{ color: 'gray' }}\r\n                        gutterBottom>\r\n                        Puerta:\r\n                      </Typography>\r\n                      <Button\r\n                        onClick={() => this.configDoor(100)}\r\n                        key={100}\r\n                        variant=\"btn btn-outline-success\"\r\n                        value=\"Submit\">\r\n                        Abrir\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => this.configDoor(0)}\r\n                        key={0}\r\n                        variant=\"btn btn-outline-success \"\r\n                        value=\"Submit\">\r\n                        Cerrar\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ActionsComp;\r\n","import React from 'react';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport ActionsComp from '../components/FunctionActions';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nclass ConfigActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <NotificationContainer />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center justify-content-center\">\r\n            <ActionsComp\r\n              growBedId={this.state.growBedId}\r\n              greenHouseId={this.state.greenHouseId}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ConfigActions;\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { getDiseases, saveInspection } from '../Utils/Api';\r\n\r\nexport default class DiseaseForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    this.Observations = '';\r\n    this.state = {\r\n      diseases: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    try {\r\n      let diseases = await getDiseases();\r\n      this.setState({ diseases });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // React Checkboxes onChange Methods\r\n  onChangeDisease = (e) => {\r\n    if (e.target.checked) {\r\n      this.checkedDiseases.push(e.target.value);\r\n    } else {\r\n      this.checkedDiseases.pop(e.target.value);\r\n    }\r\n  };\r\n\r\n  onChangeObservation = (e) => {\r\n    this.Observations = e.target.value;\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      this.props.setLoading(true);\r\n      await saveInspection({\r\n        zone: 1,\r\n        greenhouse: this.props.greenHouseId,\r\n        growbed: this.props.growBedId,\r\n        pests: this.checkedDiseases,\r\n        observation: this.Observations,\r\n      });\r\n      this.props.showNotification('success', 'Ok', 'Estado de la cama enviado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al enviar el estado de la cama',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h5>Seleccione Enfermedades:</h5>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Row className=\"mb-4\">\r\n            {this.state.diseases.map((disease, idx) => (\r\n              <Col className=\"col-lg-2\" key={idx}>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    value={disease.name}\r\n                    label={disease.name}\r\n                    onChange={this.onChangeDisease}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n          <Form.Group controlId=\"Observaciones\">\r\n            <Form.Label>\r\n              <h5>Observaciones:</h5>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              onChange={this.onChangeObservation}\r\n            />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              variant=\"btn btn-outline-primary\"\r\n              className=\"btn-block w-50 \"\r\n              >\r\n              SAVE\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport DiseaseForm from '../components/DiseaseForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Diseases extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <NotificationContainer />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-1 mt-4\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n          </Col>\r\n          <Col className=\"col-md-8 px-5\">\r\n            <div>\r\n              <div className=\"pt-3 text-center\">\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"h3\"\r\n                  style={{ color: 'gray' }}\r\n                  gutterBottom>\r\n                  Cama {this.state.growBedId}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <DiseaseForm\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n              growBedId={this.state.growBedId}\r\n              greenHouseId={this.state.greenHouseId}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { RiUserSettingsLine } from 'react-icons/ri';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { updateUser, deleteUser } from '../Utils/Api';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class UserCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {},\r\n      editing: false,\r\n      user_selected: false,\r\n    };\r\n  }\r\n\r\n  updateUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await updateUser(user);\r\n      await this.props.refreshUsers();\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario actualizado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al actualizar el usuario',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  deleteUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await deleteUser(user);\r\n      await this.props.refreshUsers();\r\n      this.setState({ user: this.props.users[0] });\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario eliminado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al eliminar el usuario',\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  setUser = (event) => {\r\n    if (!event.target.value) {\r\n      this.setState({ user: { name: '', last_name: '', email: '' } });\r\n      return;\r\n    }\r\n\r\n    let user = this.props.users.find(\r\n      (user) => user.name === event.target.value,\r\n    );\r\n    this.setState({ user, user_selected: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-1 text-center\">\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h4\"\r\n            style={{ color: 'black' }}\r\n            gutterBottom>\r\n            Usuarios:\r\n          </Typography>\r\n        </div>\r\n\r\n        <Form>\r\n          <Form.Group placeholder=\"Seleccione\">\r\n            <Form.Control onChange={this.setUser} as=\"select\">\r\n              <option value=\"\" defaultValue selected disabled>\r\n                Seleccione un Usuario\r\n              </option>\r\n              {this.props.users.map((user) => {\r\n                return (\r\n                  <option value={user.name} key={user.id}>\r\n                    {`${user.name} ${user.last_name || ''}`}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className=\"text-center pb-3 shadow-lg\">\r\n          <Row className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"icon p-0 m-0\">\r\n              <RiUserSettingsLine\r\n                classame=\"usr\"\r\n                color=\"2AC218\"\r\n                size=\"120px\"\r\n                width=\"200px\"\r\n              />\r\n            </div>\r\n\r\n            <Form className=\"w-75\">\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.name}\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, last_name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.last_name}\r\n                  type=\"text\"\r\n                  placeholder=\"Apellidos\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, email: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.email}\r\n                  type=\"text\"\r\n                  placeholder=\"Correo Electrónico\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, role: e.target.value },\r\n                    })\r\n                  }\r\n                  as=\"select\"\r\n                  required={true}\r\n                  value={this.state.user.role}>\r\n                  <option value=\"admin\">Administrador</option>\r\n                  <option value=\"viewer\">Observador</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-around w-100 m-0 px-3\">\r\n            <Col className=\"col-md-5\">\r\n              {!this.state.editing ? (\r\n                <Button\r\n                  variant=\"btn btn-outline-primary\"\r\n                  onClick={() => this.setState({ editing: true })}\r\n                  className=\"btn-block\">\r\n                  Editar\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"btn btn-outline-primary\"\r\n                  onClick={this.updateUser}\r\n                  className=\" btn-block\">\r\n                  Guardar\r\n                </Button>\r\n              )}\r\n            </Col>\r\n\r\n            <Col className=\"col-md-5\">\r\n              <Button\r\n                onClick={this.deleteUser}\r\n                variant=\"btn btn-outline-danger\"\r\n                className=\"btn-block\">\r\n                Borrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport QRCode from 'qrcode.react';\r\n\r\nexport default class QRgen extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal show={this.props.show} onHide={this.props.handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title centered=\"true\">\r\n              Escaneé su Código con su aplicacion de autenticación preferida\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <div className=\"text-center\">\r\n            <Modal.Body>\r\n              <QRCode\r\n                value={this.props.TwoFactorUrl}\r\n                size=\"400\"\r\n                includeMargin=\"true\"\r\n              />\r\n            </Modal.Body>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { createUser } from '../Utils/Api';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport QRgen from '../components/QRgenerator';\r\nimport zxcvbn from 'zxcvbn';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\n\r\nexport default class CreateUserForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: { role: 'admin' },\r\n      twoFactorUrl: '',\r\n      show: false,\r\n      BoxDisable: true,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false, twoFactorUrl: '' });\r\n  };\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  createUser = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.user.password !== this.state.user.password_v) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Las contraseñas no coinciden',\r\n      );\r\n      return;\r\n    }\r\n\r\n    let user = this.state.user;\r\n\r\n    this.props.setLoading(true);\r\n\r\n    try {\r\n      let twoFactorUrl = await createUser(user);\r\n      this.setState({ twoFactorUrl });\r\n      this.props.refreshUsers();\r\n      this.handleShow();\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'El usuario se ha creado satisfactoriamente',\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        '¡Ups!, algo salió mal al crear el usuario',\r\n      );\r\n    }\r\n\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      user: { ...this.state.user, password: e.target.value },\r\n    });\r\n    var auth = zxcvbn(e.target.value);\r\n    console.log(auth.score);\r\n    console.log(auth);\r\n    if (auth.score > 2) {\r\n      this.setState({ BoxDisable: false });\r\n    } else {\r\n      this.setState({ BoxDisable: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-4 text-center\">\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            style={{ color: 'gray' }}\r\n            gutterBottom>\r\n            Crear Usuario:\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h6\"\r\n            style={{ color: 'gray' }}\r\n            gutterBottom>\r\n            Los campos: \"Nombre\", \"Correo Electrónico, \"Contraseña\" y \"Confirmar\r\n            Contraseña\" son obligatorios; y debe ingresar una contraseña\r\n            \"aceptable\" según la barra de progreso para habilitar la creación de\r\n            usuarios.\r\n          </Typography>\r\n        </div>\r\n        <div className=\"pt-5 text-center\">\r\n          <Form onSubmit={this.createUser}>\r\n            <Row>\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Nombre:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, name: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.name}\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese Nombre\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Apellidos:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, last_name: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.last_name}\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese Apellidos\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4\">\r\n                <Form.Group>\r\n                  <Form.Label>Correo Electrónico:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, email: e.target.value },\r\n                      })\r\n                    }\r\n                    value={this.state.user.email}\r\n                    type=\"email\"\r\n                    placeholder=\"Ejemplo: usuario@dominio.com\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>Contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangePassword}\r\n                    value={this.state.user.password}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Ingrese una Contraseña Aceptable\"\r\n                    required={true}\r\n                    minLength={8}\r\n                  />\r\n                  <PasswordStrengthBar\r\n                    className=\"customClass\"\r\n                    minLength={8}\r\n                    minScore={2}\r\n                    shortScoreWord={'Nula'}\r\n                    scoreWords={[\r\n                      'Nula',\r\n                      'Muy Débil',\r\n                      'Débil',\r\n                      'Aceptable',\r\n                      'Fuerte',\r\n                    ]}\r\n                    password={this.state.user.password}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>Confirmar Contraseña:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: {\r\n                          ...this.state.user,\r\n                          password_v: e.target.value,\r\n                        },\r\n                      })\r\n                    }\r\n                    value={this.state.user.password_v}\r\n                    type=\"password\"\r\n                    placeholder=\"************\"\r\n                    required={true}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-sm-4 pt-3\">\r\n                <Form.Group>\r\n                  <Form.Label>Seleccionar Rol:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        user: { ...this.state.user, role: e.target.value },\r\n                      })\r\n                    }\r\n                    as=\"select\"\r\n                    required={true}>\r\n                    <option value=\"admin\">Administrador</option>\r\n                    <option value=\"viewer\">Observador</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"col-sm-15\">\r\n                <div className=\"d-flex justify-content-center pt-5\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={this.state.BoxDisable}\r\n                    value=\"Submit\"\r\n                    variant=\"btn btn-outline-primary\"\r\n                    className=\"btn-block w-50 \">\r\n                    Crear\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <QRgen\r\n            TwoFactorUrl={this.state.twoFactorUrl}\r\n            handleClose={this.handleClose}\r\n            show={this.state.show}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\n\r\nimport UserCard from '../components/UserCard';\r\nimport CreateUserForm from '../components/CreateUserForm';\r\n\r\nimport * as api from '../Utils/Api';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Users extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.refreshUsers();\r\n  };\r\n\r\n  refreshUsers = async () => {\r\n    this.setLoading(true);\r\n    try {\r\n      let users = await api.getAllUsers();\r\n      this.setState({ users, selected_user: users[0] });\r\n      this.setLoading(false);\r\n    } catch (e) {\r\n      console.log('Error fetching users' + e);\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBarDark></NavBarDark>\r\n        <NotificationContainer />\r\n\r\n        <Row className=\"mt-2 mx-2\">\r\n          <Col className=\"col-sm-3\">\r\n            <UserCard\r\n              users={this.state.users}\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n          </Col>\r\n\r\n          <Col className=\"col-md-9 d-flex flex-column justify-content-stretch align-items-stretch\">\r\n            <CreateUserForm\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getHistoricalEnvironment } from '../Utils/Api';\r\n\r\nexport default class DB4 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [],\r\n\r\n      options: {\r\n        theme: {\r\n          palette: 'palette6', // upto palette10\r\n        },\r\n        chart: {\r\n          height: 350,\r\n          type: 'area',\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: [],\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'dd/MM/yy HH:mm',\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n\r\n    this.getData(filters.greenHouseId, filters.growBedId);\r\n  };\r\n\r\n  getData = async (greenhouse, growbed) => {\r\n    try {\r\n      let res = await getHistoricalEnvironment(greenhouse, growbed);\r\n      this.setState({\r\n        series: res.data.series,\r\n        options: { xaxis: { categories: res.data.date } },\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center pt-3 mt-10 justify-content-center\">\r\n            <div className=\"pt-1 text-center\">\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h3\"\r\n                style={{ color: 'gray' }}\r\n                gutterBottom>\r\n                Variables ambientales Invernadero {this.state.greenHouseId} cama{' '}\r\n                {this.state.growBedId}\r\n              </Typography>\r\n            </div>\r\n\r\n            <div id=\"chart\">\r\n              <ReactApexChart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"area\"\r\n                height={350}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getEvents } from '../Utils/Api';\r\n\r\nexport default class DB2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 350,\r\n          stacked: true,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 1,\r\n          colors: ['#fff'],\r\n        },\r\n        title: {\r\n          text: 'Eventos del Sistema',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n          type: 'datetime',\r\n          title: {\r\n            text: 'Fecha',\r\n            offsetY: 10,\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Eventos totales',\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val;\r\n            },\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        theme: {\r\n          palette: 'palette1', // upto palette10\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          offsetX: 80,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n    this.getData(filters.greenHouseId);\r\n  };\r\n\r\n  getData = async (greenhouse) => {\r\n    try {\r\n      let res = await getEvents(greenhouse);\r\n      this.setState({\r\n        series: res.data.series,\r\n        options: {\r\n          xaxis: {\r\n            categories: res.data.date,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters\r\n              disabled={true}\r\n              handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center justify-content-center\">\r\n            <div className=\"pt-3 text-center\">\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h3\"\r\n                style={{ color: 'gray' }}\r\n                gutterBottom>\r\n                Eventos - Invernadero {this.state.greenHouseId}\r\n              </Typography>\r\n            </div>\r\n            <div id=\"chart\">\r\n              <ReactApexChart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"bar\"\r\n                height={350}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getDegreesDay } from '../Utils/Api';\r\n\r\nexport default class DB3 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '25%',\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent'],\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n          type: 'datetime',\r\n          labels: {\r\n            rotate: -45,\r\n            format: undefined,\r\n            formatter: undefined,\r\n            datetimeUTC: true,\r\n            datetimeFormatter: {\r\n              year: 'yyyy',\r\n              month: \"MMM 'yy\",\r\n              day: 'dd MMM',\r\n              hour: 'HH:mm',\r\n            },\r\n          },\r\n          title: {\r\n            text: 'Época de evaluación (días)',\r\n            offsetY: 10,\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Grados día',\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        theme: {\r\n          palette: 'palette1', // upto palette10\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + ' (°C)';\r\n            },\r\n          },\r\n        },\r\n      },\r\n      toggle: true,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n    this.getData(filters.greenHouseId, filters.growBedId);\r\n  };\r\n\r\n  getData = async (greenhouse, growbed) => {\r\n    try {\r\n      let res = await getDegreesDay(greenhouse, growbed);\r\n\r\n      this.setState({\r\n        series: [{ name: 'Grados día', data: res.data.degrees }],\r\n        options: {\r\n          xaxis: {\r\n            categories: res.data.date,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center justify-content-center\">\r\n            <div className=\"pt-3 text-center\">\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h3\"\r\n                style={{ color: 'gray' }}\r\n                gutterBottom>\r\n                Grados día - Invernadero {this.state.greenHouseId} cama{' '}\r\n                {this.state.growBedId}\r\n              </Typography>\r\n            </div>\r\n            <div id=\"chart\">\r\n              <ReactApexChart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"bar\"\r\n                height={300}\r\n                width={950}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport Filters from '../components/Filters';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getDiseasesCount } from '../Utils/Api';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class DB4 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      greenHouseId: null,\r\n      series: [],\r\n      options: {\r\n        theme: {\r\n          palette: 'palette1', // upto palette10\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            customScale: 0.7,\r\n            donut: {\r\n              size: '60%',\r\n            },\r\n          },\r\n        },\r\n        chart: {\r\n          type: 'donut',\r\n        },\r\n        labels: [],\r\n        legend: {\r\n          onItemClick: {\r\n            toggleDataSeries: true,\r\n          },\r\n          horizontalAlign: 'center',\r\n          position: 'top',\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 100,\r\n            options: {\r\n              chart: {\r\n                width: 500,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n\r\n        dataLabels: {\r\n          style: {\r\n            fontSize: '25px',\r\n            fontWeight: 'bold',\r\n          },\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val + '%';\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n\r\n    this.getData(filters.greenHouseId);\r\n  };\r\n\r\n  getData = async (greenhouse) => {\r\n    try {\r\n      let res = await getDiseasesCount(greenhouse);\r\n      this.setState({\r\n        series: res.data.series,\r\n        options: { labels: res.data.labels },\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-3 w-100 shadow-lg pt-3 mt-3 \">\r\n            <Filters\r\n              disabled={true}\r\n              handleFiltersChange={this.handleFiltersChange}></Filters>\r\n          </Col>\r\n          <Col className=\"col-md-9 px-10 text-center pt-3 mt-10 justify-content-center\">\r\n            <div className=\"pt-1 text-center\">\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h3\"\r\n                style={{ color: 'gray' }}\r\n                gutterBottom>\r\n                Enfermedades - Invernadero {this.state.greenHouseId}\r\n              </Typography>\r\n            </div>\r\n            <Grid container justify=\"space-around\">\r\n              <div className=\"pt-1 text-center\" id=\"chart\">\r\n                <ReactApexChart\r\n                  options={this.state.options}\r\n                  series={this.state.series}\r\n                  type=\"donut\"\r\n                  width={700}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport ConfigActions from '../pages/ConfigActions';\r\nimport Diseases from '../pages/Diseases';\r\nimport Users from '../pages/Users';\r\nimport DB1 from '../pages/GHCamas'\r\nimport DB2 from '../pages/GEvents'\r\nimport DB3 from '../pages/GGradosDia'\r\nimport DB4 from '../pages/GDiseases'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <AuthenticatedRoute path=\"/home\" component={HomePage} />\r\n        <AuthenticatedRoute path=\"/users\" component={Users} />\r\n        <AuthenticatedRoute path=\"/configactions\" component={ConfigActions} />\r\n        <AuthenticatedRoute path=\"/diseases\" component={Diseases} />\r\n        <AuthenticatedRoute path=\"/DB1\" component={DB1} />\r\n        <AuthenticatedRoute path=\"/DB2\" component={DB2} />\r\n        <AuthenticatedRoute path=\"/DB3\" component={DB3} />\r\n        <AuthenticatedRoute path=\"/DB4\" component={DB4} />\r\n\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem('token') ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nconst container = document.getElementById('root')\r\n\r\nReactDOM.render(<App/>,container)\r\n"],"sourceRoot":""}